/* this file has been autogenerated by vtkNodeJsWrapInit */
/* editing this might proof futile */

#include <nan.h>

#include "vtkArcParallelEdgeStrategyWrap.h"
#include "vtkAreaLayoutWrap.h"
#include "vtkAreaLayoutStrategyWrap.h"
#include "vtkAssignCoordinatesWrap.h"
#include "vtkAssignCoordinatesLayoutStrategyWrap.h"
#include "vtkAttributeClustering2DLayoutStrategyWrap.h"
#include "vtkBoxLayoutStrategyWrap.h"
#include "vtkCirclePackFrontChainLayoutStrategyWrap.h"
#include "vtkCirclePackLayoutWrap.h"
#include "vtkCirclePackLayoutStrategyWrap.h"
#include "vtkCirclePackToPolyDataWrap.h"
#include "vtkCircularLayoutStrategyWrap.h"
#include "vtkClustering2DLayoutStrategyWrap.h"
#include "vtkCommunity2DLayoutStrategyWrap.h"
#include "vtkConeLayoutStrategyWrap.h"
#include "vtkConstrained2DLayoutStrategyWrap.h"
#include "vtkCosmicTreeLayoutStrategyWrap.h"
#include "vtkEdgeLayoutWrap.h"
#include "vtkEdgeLayoutStrategyWrap.h"
#include "vtkFast2DLayoutStrategyWrap.h"
#include "vtkForceDirectedLayoutStrategyWrap.h"
#include "vtkGeoEdgeStrategyWrap.h"
#include "vtkGeoMathWrap.h"
#include "vtkGraphLayoutWrap.h"
#include "vtkGraphLayoutStrategyWrap.h"
#include "vtkIncrementalForceLayoutWrap.h"
#include "vtkPassThroughEdgeStrategyWrap.h"
#include "vtkPassThroughLayoutStrategyWrap.h"
#include "vtkPerturbCoincidentVerticesWrap.h"
#include "vtkRandomLayoutStrategyWrap.h"
#include "vtkSimple2DLayoutStrategyWrap.h"
#include "vtkSimple3DCirclesStrategyWrap.h"
#include "vtkSliceAndDiceLayoutStrategyWrap.h"
#include "vtkSpanTreeLayoutStrategyWrap.h"
#include "vtkSplineGraphEdgesWrap.h"
#include "vtkSquarifyLayoutStrategyWrap.h"
#include "vtkStackedTreeLayoutStrategyWrap.h"
#include "vtkTreeLayoutStrategyWrap.h"
#include "vtkTreeMapLayoutWrap.h"
#include "vtkTreeMapLayoutStrategyWrap.h"
#include "vtkTreeMapToPolyDataWrap.h"
#include "vtkTreeOrbitLayoutStrategyWrap.h"
#include "vtkTreeRingToPolyDataWrap.h"
#include "vtkKCoreLayoutWrap.h"

using namespace v8;

extern void vtkInfovisLayoutNodeJsInit( v8::Local<v8::Object> exports )
{
	VtkArcParallelEdgeStrategyWrap::Init( exports );
	VtkAreaLayoutWrap::Init( exports );
	VtkAreaLayoutStrategyWrap::Init( exports );
	VtkAssignCoordinatesWrap::Init( exports );
	VtkAssignCoordinatesLayoutStrategyWrap::Init( exports );
	VtkAttributeClustering2DLayoutStrategyWrap::Init( exports );
	VtkBoxLayoutStrategyWrap::Init( exports );
	VtkCirclePackFrontChainLayoutStrategyWrap::Init( exports );
	VtkCirclePackLayoutWrap::Init( exports );
	VtkCirclePackLayoutStrategyWrap::Init( exports );
	VtkCirclePackToPolyDataWrap::Init( exports );
	VtkCircularLayoutStrategyWrap::Init( exports );
	VtkClustering2DLayoutStrategyWrap::Init( exports );
	VtkCommunity2DLayoutStrategyWrap::Init( exports );
	VtkConeLayoutStrategyWrap::Init( exports );
	VtkConstrained2DLayoutStrategyWrap::Init( exports );
	VtkCosmicTreeLayoutStrategyWrap::Init( exports );
	VtkEdgeLayoutWrap::Init( exports );
	VtkEdgeLayoutStrategyWrap::Init( exports );
	VtkFast2DLayoutStrategyWrap::Init( exports );
	VtkForceDirectedLayoutStrategyWrap::Init( exports );
	VtkGeoEdgeStrategyWrap::Init( exports );
	VtkGeoMathWrap::Init( exports );
	VtkGraphLayoutWrap::Init( exports );
	VtkGraphLayoutStrategyWrap::Init( exports );
	VtkIncrementalForceLayoutWrap::Init( exports );
	VtkPassThroughEdgeStrategyWrap::Init( exports );
	VtkPassThroughLayoutStrategyWrap::Init( exports );
	VtkPerturbCoincidentVerticesWrap::Init( exports );
	VtkRandomLayoutStrategyWrap::Init( exports );
	VtkSimple2DLayoutStrategyWrap::Init( exports );
	VtkSimple3DCirclesStrategyWrap::Init( exports );
	VtkSliceAndDiceLayoutStrategyWrap::Init( exports );
	VtkSpanTreeLayoutStrategyWrap::Init( exports );
	VtkSplineGraphEdgesWrap::Init( exports );
	VtkSquarifyLayoutStrategyWrap::Init( exports );
	VtkStackedTreeLayoutStrategyWrap::Init( exports );
	VtkTreeLayoutStrategyWrap::Init( exports );
	VtkTreeMapLayoutWrap::Init( exports );
	VtkTreeMapLayoutStrategyWrap::Init( exports );
	VtkTreeMapToPolyDataWrap::Init( exports );
	VtkTreeOrbitLayoutStrategyWrap::Init( exports );
	VtkTreeRingToPolyDataWrap::Init( exports );
	VtkKCoreLayoutWrap::Init( exports );
}

