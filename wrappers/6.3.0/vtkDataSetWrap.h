/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKDATASETWRAP_H
#define NATIVE_EXTENSION_VTK_VTKDATASETWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkDataSet.h>

#include "vtkDataObjectWrap.h"
#include "../../plus/plus.h"

class VtkDataSetWrap : public VtkDataObjectWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkDataSetWrap(vtkSmartPointer<vtkDataSet>);
		VtkDataSetWrap();
		~VtkDataSetWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void AllocateCellGhostArray(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void AllocatePointGhostArray(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void CheckAttributes(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ComputeBounds(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void CopyAttributes(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void DeepCopy(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GenerateGhostArray(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetAttributesAsFieldData(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetBounds(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetCellData(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetCellGhostArray(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetCellTypes(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetCenter(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetData(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetDataObjectType(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetLength(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetPointData(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetPointGhostArray(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetScalarRange(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void HasAnyBlankCells(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void HasAnyBlankPoints(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void HasAnyGhostCells(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void HasAnyGhostPoints(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void Initialize(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewCellIterator(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ShallowCopy(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void Squeeze(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void UpdateCellGhostArrayCache(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void UpdatePointGhostArrayCache(const Nan::FunctionCallbackInfo<v8::Value>& info);

#ifdef VTK_NODE_PLUS_VTKDATASETWRAP_CLASSDEF
		VTK_NODE_PLUS_VTKDATASETWRAP_CLASSDEF
#endif
};

#endif
