/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKROISTENCILSOURCEWRAP_H
#define NATIVE_EXTENSION_VTK_VTKROISTENCILSOURCEWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkROIStencilSource.h>

#include "vtkImageStencilSourceWrap.h"
#include "../../plus/plus.h"

class VtkROIStencilSourceWrap : public VtkImageStencilSourceWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkROIStencilSourceWrap(vtkSmartPointer<vtkROIStencilSource>);
		VtkROIStencilSourceWrap();
		~VtkROIStencilSourceWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void GetBounds(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetShape(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetShapeAsString(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetShapeMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetShapeMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetBounds(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetShape(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetShapeToBox(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetShapeToCylinderX(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetShapeToCylinderY(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetShapeToCylinderZ(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetShapeToEllipsoid(const Nan::FunctionCallbackInfo<v8::Value>& info);

#ifdef VTK_NODE_PLUS_VTKROISTENCILSOURCEWRAP_CLASSDEF
		VTK_NODE_PLUS_VTKROISTENCILSOURCEWRAP_CLASSDEF
#endif
};

#endif
