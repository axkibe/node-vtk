/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKSCALARSTOCOLORSWRAP_H
#define NATIVE_EXTENSION_VTK_VTKSCALARSTOCOLORSWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkScalarsToColors.h>

#include "vtkObjectWrap.h"
#include "../../plus/plus.h"

class VtkScalarsToColorsWrap : public VtkObjectWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkScalarsToColorsWrap(vtkSmartPointer<vtkScalarsToColors>);
		VtkScalarsToColorsWrap();
		~VtkScalarsToColorsWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void Build(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void DeepCopy(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetAlpha(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetAnnotatedValues(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetAnnotations(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetColor(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetIndexedLookup(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetLuminance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetOpacity(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetRange(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetVectorComponent(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetVectorMode(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetVectorSize(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IndexedLookupOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IndexedLookupOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsOpaque(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void MapScalars(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ResetAnnotations(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetAlpha(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetAnnotations(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetIndexedLookup(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetRange(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetVectorComponent(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetVectorMode(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetVectorModeToComponent(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetVectorModeToMagnitude(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetVectorModeToRGBColors(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetVectorSize(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void UsingLogScale(const Nan::FunctionCallbackInfo<v8::Value>& info);

#ifdef VTK_NODE_PLUS_VTKSCALARSTOCOLORSWRAP_CLASSDEF
		VTK_NODE_PLUS_VTKSCALARSTOCOLORSWRAP_CLASSDEF
#endif
};

#endif
