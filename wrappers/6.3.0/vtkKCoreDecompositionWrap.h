/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKKCOREDECOMPOSITIONWRAP_H
#define NATIVE_EXTENSION_VTK_VTKKCOREDECOMPOSITIONWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkKCoreDecomposition.h>

#include "vtkGraphAlgorithmWrap.h"
#include "../../plus/plus.h"

class VtkKCoreDecompositionWrap : public VtkGraphAlgorithmWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkKCoreDecompositionWrap(vtkSmartPointer<vtkKCoreDecomposition>);
		VtkKCoreDecompositionWrap();
		~VtkKCoreDecompositionWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void CheckInputGraphOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void CheckInputGraphOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetCheckInputGraph(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetUseInDegreeNeighbors(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetUseOutDegreeNeighbors(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCheckInputGraph(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetOutputArrayName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetUseInDegreeNeighbors(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetUseOutDegreeNeighbors(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void UseInDegreeNeighborsOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void UseInDegreeNeighborsOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void UseOutDegreeNeighborsOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void UseOutDegreeNeighborsOn(const Nan::FunctionCallbackInfo<v8::Value>& info);

#ifdef VTK_NODE_PLUS_VTKKCOREDECOMPOSITIONWRAP_CLASSDEF
		VTK_NODE_PLUS_VTKKCOREDECOMPOSITIONWRAP_CLASSDEF
#endif
};

#endif
