/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKGRAPHANNOTATIONLAYERSFILTERWRAP_H
#define NATIVE_EXTENSION_VTK_VTKGRAPHANNOTATIONLAYERSFILTERWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkGraphAnnotationLayersFilter.h>

#include "vtkPolyDataAlgorithmWrap.h"

class VtkGraphAnnotationLayersFilterWrap : public VtkPolyDataAlgorithmWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkGraphAnnotationLayersFilterWrap(vtkSmartPointer<vtkGraphAnnotationLayersFilter>);
		VtkGraphAnnotationLayersFilterWrap();
		~VtkGraphAnnotationLayersFilterWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void OutlineOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void OutlineOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetHullShapeToBoundingRectangle(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetHullShapeToConvexHull(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetMinHullSizeInDisplay(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetMinHullSizeInWorld(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetRenderer(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetScaleFactor(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
