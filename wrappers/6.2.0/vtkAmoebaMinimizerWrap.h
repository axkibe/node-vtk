/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKAMOEBAMINIMIZERWRAP_H
#define NATIVE_EXTENSION_VTK_VTKAMOEBAMINIMIZERWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkAmoebaMinimizer.h>

#include "vtkObjectWrap.h"

class VtkAmoebaMinimizerWrap : public VtkObjectWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkAmoebaMinimizerWrap(vtkSmartPointer<vtkAmoebaMinimizer>);
		VtkAmoebaMinimizerWrap();
		~VtkAmoebaMinimizerWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void EvaluateFunction(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetContractionRatio(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetContractionRatioMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetContractionRatioMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetExpansionRatio(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetExpansionRatioMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetExpansionRatioMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetFunctionEvaluations(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetFunctionValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetIterations(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetMaxIterations(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNumberOfParameters(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetParameterName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetParameterScale(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetParameterTolerance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetParameterValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetTolerance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void Initialize(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void Iterate(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void Minimize(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetContractionRatio(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetExpansionRatio(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetFunctionValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetMaxIterations(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetParameterScale(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetParameterTolerance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetParameterValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetTolerance(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
