/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKLODACTORWRAP_H
#define NATIVE_EXTENSION_VTK_VTKLODACTORWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkLODActor.h>

#include "vtkActorWrap.h"

class VtkLODActorWrap : public VtkActorWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkLODActorWrap(vtkSmartPointer<vtkLODActor>);
		VtkLODActorWrap();
		~VtkLODActorWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void AddLODMapper(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetLODMappers(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetLowResFilter(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetMediumResFilter(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNumberOfCloudPoints(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void Modified(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ReleaseGraphicsResources(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void Render(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void RenderOpaqueGeometry(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetLowResFilter(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetMediumResFilter(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetNumberOfCloudPoints(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ShallowCopy(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
