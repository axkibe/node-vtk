/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKCOLLAPSEVERTICESBYARRAYWRAP_H
#define NATIVE_EXTENSION_VTK_VTKCOLLAPSEVERTICESBYARRAYWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkCollapseVerticesByArray.h>

#include "vtkGraphAlgorithmWrap.h"

class VtkCollapseVerticesByArrayWrap : public VtkGraphAlgorithmWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkCollapseVerticesByArrayWrap(vtkSmartPointer<vtkCollapseVerticesByArray>);
		VtkCollapseVerticesByArrayWrap();
		~VtkCollapseVerticesByArrayWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void AddAggregateEdgeArray(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void AllowSelfLoopsOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void AllowSelfLoopsOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ClearAggregateEdgeArray(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void CountEdgesCollapsedOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void CountEdgesCollapsedOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void CountVerticesCollapsedOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void CountVerticesCollapsedOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetEdgesCollapsedArray(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetVertexArray(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetVerticesCollapsedArray(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetEdgesCollapsedArray(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetVertexArray(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetVerticesCollapsedArray(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
