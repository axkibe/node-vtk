/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKCONSTRAINEDPOINTHANDLEREPRESENTATIONWRAP_H
#define NATIVE_EXTENSION_VTK_VTKCONSTRAINEDPOINTHANDLEREPRESENTATIONWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkConstrainedPointHandleRepresentation.h>

#include "vtkHandleRepresentationWrap.h"
#include "../../plus/plus.h"

class VtkConstrainedPointHandleRepresentationWrap : public VtkHandleRepresentationWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkConstrainedPointHandleRepresentationWrap(vtkSmartPointer<vtkConstrainedPointHandleRepresentation>);
		VtkConstrainedPointHandleRepresentationWrap();
		~VtkConstrainedPointHandleRepresentationWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void AddBoundingPlane(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void BuildRepresentation(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void CheckConstraint(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ComputeInteractionState(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetActiveCursorShape(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetActiveProperty(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetActors(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetBoundingPlanes(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetCursorShape(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetObliquePlane(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetPosition(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetProjectionNormal(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetProjectionNormalMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetProjectionNormalMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetProjectionPosition(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetProperty(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetSelectedProperty(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void HasTranslucentPolygonalGeometry(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void Highlight(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ReleaseGraphicsResources(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void RemoveAllBoundingPlanes(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void RemoveBoundingPlane(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void RenderOpaqueGeometry(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void RenderOverlay(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void RenderTranslucentPolygonalGeometry(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetActiveCursorShape(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetBoundingPlanes(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCursorShape(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetDisplayPosition(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetObliquePlane(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetPosition(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetProjectionNormal(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetProjectionNormalToOblique(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetProjectionNormalToXAxis(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetProjectionNormalToYAxis(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetProjectionNormalToZAxis(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetProjectionPosition(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetRenderer(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ShallowCopy(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void StartWidgetInteraction(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void WidgetInteraction(const Nan::FunctionCallbackInfo<v8::Value>& info);

#ifdef VTK_NODE_PLUS_VTKCONSTRAINEDPOINTHANDLEREPRESENTATIONWRAP_CLASSDEF
		VTK_NODE_PLUS_VTKCONSTRAINEDPOINTHANDLEREPRESENTATIONWRAP_CLASSDEF
#endif
};

#endif
