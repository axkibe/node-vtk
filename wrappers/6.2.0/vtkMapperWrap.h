/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKMAPPERWRAP_H
#define NATIVE_EXTENSION_VTK_VTKMAPPERWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkMapper.h>

#include "vtkAbstractMapper3DWrap.h"

class VtkMapperWrap : public VtkAbstractMapper3DWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkMapperWrap(vtkSmartPointer<vtkMapper>);
		VtkMapperWrap();
		~VtkMapperWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void ColorByArrayComponent(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void CreateDefaultLookupTable(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetArrayAccessMode(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetArrayComponent(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetArrayId(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetArrayName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetColorMode(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetColorModeAsString(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetForceCompileOnly(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetGlobalImmediateModeRendering(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetImmediateModeRendering(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetInput(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetInputAsDataSet(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetInterpolateScalarsBeforeMapping(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetIsOpaque(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetLookupTable(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetRenderTime(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetResolveCoincidentTopology(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetResolveCoincidentTopologyPolygonOffsetFaces(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetResolveCoincidentTopologyZShift(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetScalarMaterialMode(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetScalarMaterialModeAsString(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetScalarMode(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetScalarModeAsString(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetScalarVisibility(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetStatic(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetSupportsSelection(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetUseLookupTableScalarRange(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GlobalImmediateModeRenderingOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GlobalImmediateModeRenderingOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ImmediateModeRenderingOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ImmediateModeRenderingOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void InterpolateScalarsBeforeMappingOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void InterpolateScalarsBeforeMappingOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void MapScalars(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ReleaseGraphicsResources(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void Render(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ScalarVisibilityOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ScalarVisibilityOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SelectColorArray(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetColorMode(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetColorModeToDefault(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetColorModeToDirectScalars(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetColorModeToMapScalars(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetForceCompileOnly(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetGlobalImmediateModeRendering(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetImmediateModeRendering(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetInterpolateScalarsBeforeMapping(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetLookupTable(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetRenderTime(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetResolveCoincidentTopology(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetResolveCoincidentTopologyPolygonOffsetFaces(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetResolveCoincidentTopologyPolygonOffsetParameters(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetResolveCoincidentTopologyToDefault(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetResolveCoincidentTopologyToOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetResolveCoincidentTopologyToPolygonOffset(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetResolveCoincidentTopologyToShiftZBuffer(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetResolveCoincidentTopologyZShift(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetScalarMaterialMode(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetScalarMaterialModeToAmbient(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetScalarMaterialModeToAmbientAndDiffuse(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetScalarMaterialModeToDefault(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetScalarMaterialModeToDiffuse(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetScalarMode(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetScalarModeToDefault(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetScalarModeToUseCellData(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetScalarModeToUseCellFieldData(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetScalarModeToUseFieldData(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetScalarModeToUsePointData(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetScalarModeToUsePointFieldData(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetScalarRange(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetScalarVisibility(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetStatic(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetUseLookupTableScalarRange(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ShallowCopy(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void StaticOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void StaticOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void UseLookupTableScalarRangeOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void UseLookupTableScalarRangeOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
