/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKCOORDINATEWRAP_H
#define NATIVE_EXTENSION_VTK_VTKCOORDINATEWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkCoordinate.h>

#include "vtkObjectWrap.h"
#include "../../plus/plus.h"

class VtkCoordinateWrap : public VtkObjectWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkCoordinateWrap(vtkSmartPointer<vtkCoordinate>);
		VtkCoordinateWrap();
		~VtkCoordinateWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetComputedDisplayValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetComputedDoubleDisplayValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetComputedDoubleViewportValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetComputedLocalDisplayValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetComputedViewportValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetComputedWorldValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetCoordinateSystem(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetCoordinateSystemAsString(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetReferenceCoordinate(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetViewport(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCoordinateSystem(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCoordinateSystemToDisplay(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCoordinateSystemToNormalizedDisplay(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCoordinateSystemToNormalizedViewport(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCoordinateSystemToView(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCoordinateSystemToViewport(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCoordinateSystemToWorld(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetReferenceCoordinate(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetViewport(const Nan::FunctionCallbackInfo<v8::Value>& info);

#ifdef VTK_NODE_PLUS_VTKCOORDINATEWRAP_CLASSDEF
		VTK_NODE_PLUS_VTKCOORDINATEWRAP_CLASSDEF
#endif
};

#endif
