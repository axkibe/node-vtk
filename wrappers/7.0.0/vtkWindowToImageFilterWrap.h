/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKWINDOWTOIMAGEFILTERWRAP_H
#define NATIVE_EXTENSION_VTK_VTKWINDOWTOIMAGEFILTERWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkWindowToImageFilter.h>

#include "vtkAlgorithmWrap.h"

class VtkWindowToImageFilterWrap : public VtkAlgorithmWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkWindowToImageFilterWrap(vtkSmartPointer<vtkWindowToImageFilter>);
		VtkWindowToImageFilterWrap();
		~VtkWindowToImageFilterWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void FixBoundaryOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void FixBoundaryOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetFixBoundary(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetInput(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetInputBufferType(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetMagnification(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetMagnificationMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetMagnificationMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetOutput(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetReadFrontBuffer(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetShouldRerender(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ReadFrontBufferOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ReadFrontBufferOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetFixBoundary(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetInput(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetInputBufferType(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetInputBufferTypeToRGB(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetInputBufferTypeToRGBA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetInputBufferTypeToZBuffer(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetMagnification(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetReadFrontBuffer(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetShouldRerender(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetViewport(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ShouldRerenderOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ShouldRerenderOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
