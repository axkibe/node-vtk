/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKAVSUCDREADERWRAP_H
#define NATIVE_EXTENSION_VTK_VTKAVSUCDREADERWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkAVSucdReader.h>

#include "vtkUnstructuredGridAlgorithmWrap.h"
#include "../../plus/plus.h"

class VtkAVSucdReaderWrap : public VtkUnstructuredGridAlgorithmWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkAVSucdReaderWrap(vtkSmartPointer<vtkAVSucdReader>);
		VtkAVSucdReaderWrap();
		~VtkAVSucdReaderWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void BinaryFileOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void BinaryFileOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void DisableAllCellArrays(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void DisableAllPointArrays(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void EnableAllCellArrays(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void EnableAllPointArrays(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetBinaryFile(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetByteOrder(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetByteOrderAsString(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetCellArrayName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetCellArrayStatus(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetFileName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNumberOfCellArrays(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNumberOfCellComponents(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNumberOfCellFields(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNumberOfCells(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNumberOfFields(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNumberOfNodeComponents(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNumberOfNodeFields(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNumberOfNodes(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNumberOfPointArrays(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetPointArrayName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetPointArrayStatus(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetBinaryFile(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetByteOrder(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetByteOrderToBigEndian(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetByteOrderToLittleEndian(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellArrayStatus(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetFileName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetPointArrayStatus(const Nan::FunctionCallbackInfo<v8::Value>& info);

#ifdef VTK_NODE_PLUS_VTKAVSUCDREADERWRAP_CLASSDEF
		VTK_NODE_PLUS_VTKAVSUCDREADERWRAP_CLASSDEF
#endif
};

#endif
