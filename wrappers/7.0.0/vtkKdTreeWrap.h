/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKKDTREEWRAP_H
#define NATIVE_EXTENSION_VTK_VTKKDTREEWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkKdTree.h>

#include "vtkLocatorWrap.h"
#include "../../plus/plus.h"

class VtkKdTreeWrap : public VtkLocatorWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkKdTreeWrap(vtkSmartPointer<vtkKdTree>);
		VtkKdTreeWrap();
		~VtkKdTreeWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void AddDataSet(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void BuildLocator(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void BuildLocatorFromPoints(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void BuildMapForDuplicatePoints(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void CopyTree(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void CreateCellLists(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void DeleteCellLists(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void FindClosestNPoints(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void FindPointsWithinRadius(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void FreeSearchStructure(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GenerateRepresentation(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GenerateRepresentationUsingDataBoundsOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GenerateRepresentationUsingDataBoundsOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetBoundaryCellList(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetCellList(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetCuts(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetDataSet(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetDataSetIndex(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetDataSets(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetFudgeFactor(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetGenerateRepresentationUsingDataBounds(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetIncludeRegionBoundaryCells(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetMinCells(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNumberOfDataSets(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNumberOfRegions(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNumberOfRegionsOrLess(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNumberOfRegionsOrMore(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetPointsInRegion(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetRegionBounds(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetRegionContainingPoint(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetRegionDataBounds(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetTiming(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IncludeRegionBoundaryCellsOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IncludeRegionBoundaryCellsOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void InvalidateGeometry(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewGeometry(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void OmitNoPartitioning(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void OmitXPartitioning(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void OmitXYPartitioning(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void OmitYPartitioning(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void OmitYZPartitioning(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void OmitZPartitioning(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void OmitZXPartitioning(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void PrintRegion(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void PrintTree(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void PrintVerboseTree(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void RemoveAllDataSets(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void RemoveDataSet(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCuts(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetDataSet(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetFudgeFactor(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetGenerateRepresentationUsingDataBounds(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetIncludeRegionBoundaryCells(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetMinCells(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetNumberOfRegionsOrLess(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetNumberOfRegionsOrMore(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetTiming(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void TimingOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void TimingOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ViewOrderAllRegionsFromPosition(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ViewOrderAllRegionsInDirection(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ViewOrderRegionsFromPosition(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ViewOrderRegionsInDirection(const Nan::FunctionCallbackInfo<v8::Value>& info);

#ifdef VTK_NODE_PLUS_VTKKDTREEWRAP_CLASSDEF
		VTK_NODE_PLUS_VTKKDTREEWRAP_CLASSDEF
#endif
};

#endif
