/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKGENERICCELLWRAP_H
#define NATIVE_EXTENSION_VTK_VTKGENERICCELLWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkGenericCell.h>

#include "vtkCellWrap.h"

class VtkGenericCellWrap : public VtkCellWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkGenericCellWrap(vtkSmartPointer<vtkGenericCell>);
		VtkGenericCellWrap();
		~VtkGenericCellWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void CellBoundary(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void DeepCopy(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetCellDimension(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetCellType(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetEdge(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetFace(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNumberOfEdges(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNumberOfFaces(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetParametricCenter(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void Initialize(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void InstantiateCell(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsLinear(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsPrimaryCell(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void RequiresExplicitFaceRepresentation(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void RequiresInitialization(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellType(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellTypeToBiQuadraticQuad(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellTypeToBiQuadraticQuadraticHexahedron(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellTypeToBiQuadraticQuadraticWedge(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellTypeToBiQuadraticTriangle(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellTypeToConvexPointSet(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellTypeToCubicLine(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellTypeToEmptyCell(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellTypeToHexagonalPrism(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellTypeToHexahedron(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellTypeToLine(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellTypeToPentagonalPrism(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellTypeToPixel(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellTypeToPolyLine(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellTypeToPolyVertex(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellTypeToPolygon(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellTypeToPolyhedron(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellTypeToPyramid(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellTypeToQuad(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellTypeToQuadraticEdge(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellTypeToQuadraticHexahedron(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellTypeToQuadraticLinearQuad(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellTypeToQuadraticLinearWedge(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellTypeToQuadraticPolygon(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellTypeToQuadraticPyramid(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellTypeToQuadraticQuad(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellTypeToQuadraticTetra(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellTypeToQuadraticTriangle(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellTypeToQuadraticWedge(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellTypeToTetra(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellTypeToTriQuadraticHexahedron(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellTypeToTriangle(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellTypeToTriangleStrip(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellTypeToVertex(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellTypeToVoxel(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellTypeToWedge(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetPointIds(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetPoints(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ShallowCopy(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void Triangulate(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
