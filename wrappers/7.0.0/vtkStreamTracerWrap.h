/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKSTREAMTRACERWRAP_H
#define NATIVE_EXTENSION_VTK_VTKSTREAMTRACERWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkStreamTracer.h>

#include "vtkPolyDataAlgorithmWrap.h"
#include "../../plus/plus.h"

class VtkStreamTracerWrap : public VtkPolyDataAlgorithmWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkStreamTracerWrap(vtkSmartPointer<vtkStreamTracer>);
		VtkStreamTracerWrap();
		~VtkStreamTracerWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetComputeVorticity(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetInitialIntegrationStep(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetIntegrationDirection(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetIntegrationDirectionMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetIntegrationDirectionMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetIntegrationStepUnit(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetIntegrator(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetIntegratorType(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetMaximumError(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetMaximumIntegrationStep(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetMaximumPropagation(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetMinimumIntegrationStep(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetRotationScale(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetSource(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetStartPosition(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetSurfaceStreamlines(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetTerminalSpeed(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetComputeVorticity(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetInitialIntegrationStep(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetIntegrationDirection(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetIntegrationDirectionToBackward(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetIntegrationDirectionToBoth(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetIntegrationDirectionToForward(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetIntegrationStepUnit(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetIntegrator(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetIntegratorType(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetIntegratorTypeToRungeKutta2(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetIntegratorTypeToRungeKutta4(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetIntegratorTypeToRungeKutta45(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetInterpolatorPrototype(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetInterpolatorType(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetInterpolatorTypeToCellLocator(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetInterpolatorTypeToDataSetPointLocator(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetMaximumError(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetMaximumIntegrationStep(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetMaximumPropagation(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetMinimumIntegrationStep(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetRotationScale(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetSourceConnection(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetSourceData(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetStartPosition(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetSurfaceStreamlines(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetTerminalSpeed(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SurfaceStreamlinesOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SurfaceStreamlinesOn(const Nan::FunctionCallbackInfo<v8::Value>& info);

#ifdef VTK_NODE_PLUS_VTKSTREAMTRACERWRAP_CLASSDEF
		VTK_NODE_PLUS_VTKSTREAMTRACERWRAP_CLASSDEF
#endif
};

#endif
