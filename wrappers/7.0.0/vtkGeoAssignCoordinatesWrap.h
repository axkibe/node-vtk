/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKGEOASSIGNCOORDINATESWRAP_H
#define NATIVE_EXTENSION_VTK_VTKGEOASSIGNCOORDINATESWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkGeoAssignCoordinates.h>

#include "vtkPassInputTypeAlgorithmWrap.h"

class VtkGeoAssignCoordinatesWrap : public VtkPassInputTypeAlgorithmWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkGeoAssignCoordinatesWrap(vtkSmartPointer<vtkGeoAssignCoordinates>);
		VtkGeoAssignCoordinatesWrap();
		~VtkGeoAssignCoordinatesWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void CoordinatesInArraysOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void CoordinatesInArraysOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetCoordinatesInArrays(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetGlobeRadius(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetLatitudeArrayName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetLongitudeArrayName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetTransform(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCoordinatesInArrays(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetGlobeRadius(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetLatitudeArrayName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetLongitudeArrayName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetTransform(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
