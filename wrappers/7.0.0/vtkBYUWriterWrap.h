/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKBYUWRITERWRAP_H
#define NATIVE_EXTENSION_VTK_VTKBYUWRITERWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkBYUWriter.h>

#include "vtkWriterWrap.h"
#include "../../plus/plus.h"

class VtkBYUWriterWrap : public VtkWriterWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkBYUWriterWrap(vtkSmartPointer<vtkBYUWriter>);
		VtkBYUWriterWrap();
		~VtkBYUWriterWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetDisplacementFileName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetGeometryFileName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetInput(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetScalarFileName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetTextureFileName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetWriteDisplacement(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetWriteScalar(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetWriteTexture(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetDisplacementFileName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetGeometryFileName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetScalarFileName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetTextureFileName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetWriteDisplacement(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetWriteScalar(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetWriteTexture(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void WriteDisplacementOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void WriteDisplacementOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void WriteScalarOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void WriteScalarOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void WriteTextureOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void WriteTextureOn(const Nan::FunctionCallbackInfo<v8::Value>& info);

#ifdef VTK_NODE_PLUS_VTKBYUWRITERWRAP_CLASSDEF
		VTK_NODE_PLUS_VTKBYUWRITERWRAP_CLASSDEF
#endif
};

#endif
