/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKRIBEXPORTERWRAP_H
#define NATIVE_EXTENSION_VTK_VTKRIBEXPORTERWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkRIBExporter.h>

#include "vtkExporterWrap.h"

class VtkRIBExporterWrap : public VtkExporterWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkRIBExporterWrap(vtkSmartPointer<vtkRIBExporter>);
		VtkRIBExporterWrap();
		~VtkRIBExporterWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void BackgroundOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void BackgroundOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ExportArraysOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ExportArraysOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetBackground(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetExportArrays(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetExportArraysMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetExportArraysMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetFilePrefix(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetTexturePrefix(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetBackground(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetExportArrays(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetFilePrefix(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetPixelSamples(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetSize(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetTexturePrefix(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
