/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKABSTRACTTRANSFORMWRAP_H
#define NATIVE_EXTENSION_VTK_VTKABSTRACTTRANSFORMWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkAbstractTransform.h>

#include "vtkObjectWrap.h"
#include "../../plus/plus.h"

class VtkAbstractTransformWrap : public VtkObjectWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkAbstractTransformWrap(vtkSmartPointer<vtkAbstractTransform>);
		VtkAbstractTransformWrap();
		~VtkAbstractTransformWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void CircuitCheck(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void DeepCopy(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetInverse(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetMTime(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetInverse(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void TransformDoubleNormalAtPoint(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void TransformDoublePoint(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void TransformDoubleVectorAtPoint(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void TransformFloatNormalAtPoint(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void TransformFloatPoint(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void TransformFloatVectorAtPoint(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void TransformNormalAtPoint(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void TransformPoint(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void TransformPoints(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void TransformPointsNormalsVectors(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void TransformVectorAtPoint(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void Update(const Nan::FunctionCallbackInfo<v8::Value>& info);

#ifdef VTK_NODE_PLUS_VTKABSTRACTTRANSFORMWRAP_CLASSDEF
		VTK_NODE_PLUS_VTKABSTRACTTRANSFORMWRAP_CLASSDEF
#endif
};

#endif
