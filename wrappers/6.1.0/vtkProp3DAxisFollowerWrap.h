/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKPROP3DAXISFOLLOWERWRAP_H
#define NATIVE_EXTENSION_VTK_VTKPROP3DAXISFOLLOWERWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkProp3DAxisFollower.h>

#include "vtkProp3DFollowerWrap.h"
#include "../../plus/plus.h"

class VtkProp3DAxisFollowerWrap : public VtkProp3DFollowerWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkProp3DAxisFollowerWrap(vtkSmartPointer<vtkProp3DAxisFollower>);
		VtkProp3DAxisFollowerWrap();
		~VtkProp3DAxisFollowerWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void AutoCenterOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void AutoCenterOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void AutoScale(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ComputeMatrix(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetAutoCenter(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetAxis(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetDistanceLODThreshold(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetDistanceLODThresholdMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetDistanceLODThresholdMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetEnableDistanceLOD(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetEnableViewAngleLOD(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetScreenOffset(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetViewAngleLODThreshold(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetViewAngleLODThresholdMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetViewAngleLODThresholdMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetViewport(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void RenderOpaqueGeometry(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void RenderTranslucentPolygonalGeometry(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void RenderVolumetricGeometry(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetAutoCenter(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetAxis(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetDistanceLODThreshold(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetEnableDistanceLOD(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetEnableViewAngleLOD(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetScreenOffset(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetViewAngleLODThreshold(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetViewport(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ShallowCopy(const Nan::FunctionCallbackInfo<v8::Value>& info);

#ifdef VTK_NODE_PLUS_VTKPROP3DAXISFOLLOWERWRAP_CLASSDEF
		VTK_NODE_PLUS_VTKPROP3DAXISFOLLOWERWRAP_CLASSDEF
#endif
};

#endif
