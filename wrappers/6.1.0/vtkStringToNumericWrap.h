/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKSTRINGTONUMERICWRAP_H
#define NATIVE_EXTENSION_VTK_VTKSTRINGTONUMERICWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkStringToNumeric.h>

#include "vtkDataObjectAlgorithmWrap.h"

class VtkStringToNumericWrap : public VtkDataObjectAlgorithmWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkStringToNumericWrap(vtkSmartPointer<vtkStringToNumeric>);
		VtkStringToNumericWrap();
		~VtkStringToNumericWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void ConvertCellDataOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ConvertCellDataOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ConvertEdgeDataOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ConvertEdgeDataOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ConvertFieldDataOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ConvertFieldDataOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ConvertPointDataOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ConvertPointDataOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ConvertRowDataOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ConvertRowDataOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ConvertVertexDataOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ConvertVertexDataOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ForceDoubleOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ForceDoubleOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetDefaultDoubleValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetDefaultIntegerValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetDefaultDoubleValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetDefaultIntegerValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void TrimWhitespacePriorToNumericConversionOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void TrimWhitespacePriorToNumericConversionOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
