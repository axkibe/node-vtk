/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKIMAGEHISTOGRAMSTATISTICSWRAP_H
#define NATIVE_EXTENSION_VTK_VTKIMAGEHISTOGRAMSTATISTICSWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkImageHistogramStatistics.h>

#include "vtkImageHistogramWrap.h"

class VtkImageHistogramStatisticsWrap : public VtkImageHistogramWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkImageHistogramStatisticsWrap(vtkSmartPointer<vtkImageHistogramStatistics>);
		VtkImageHistogramStatisticsWrap();
		~VtkImageHistogramStatisticsWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetMaximum(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetMean(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetMedian(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetMinimum(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetStandardDeviation(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetAutoRangeExpansionFactors(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetAutoRangePercentiles(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
