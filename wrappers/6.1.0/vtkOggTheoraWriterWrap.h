/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKOGGTHEORAWRITERWRAP_H
#define NATIVE_EXTENSION_VTK_VTKOGGTHEORAWRITERWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkOggTheoraWriter.h>

#include "vtkGenericMovieWriterWrap.h"
#include "../../plus/plus.h"

class VtkOggTheoraWriterWrap : public VtkGenericMovieWriterWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkOggTheoraWriterWrap(vtkSmartPointer<vtkOggTheoraWriter>);
		VtkOggTheoraWriterWrap();
		~VtkOggTheoraWriterWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void End(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetQuality(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetQualityMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetQualityMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetRate(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetRateMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetRateMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetSubsampling(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetQuality(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetRate(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetSubsampling(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void Start(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SubsamplingOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SubsamplingOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void Write(const Nan::FunctionCallbackInfo<v8::Value>& info);

#ifdef VTK_NODE_PLUS_VTKOGGTHEORAWRITERWRAP_CLASSDEF
		VTK_NODE_PLUS_VTKOGGTHEORAWRITERWRAP_CLASSDEF
#endif
};

#endif
