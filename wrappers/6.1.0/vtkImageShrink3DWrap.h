/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKIMAGESHRINK3DWRAP_H
#define NATIVE_EXTENSION_VTK_VTKIMAGESHRINK3DWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkImageShrink3D.h>

#include "vtkThreadedImageAlgorithmWrap.h"

class VtkImageShrink3DWrap : public VtkThreadedImageAlgorithmWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkImageShrink3DWrap(vtkSmartPointer<vtkImageShrink3D>);
		VtkImageShrink3DWrap();
		~VtkImageShrink3DWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void AveragingOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void AveragingOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetAveraging(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetMaximum(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetMean(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetMedian(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetMinimum(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetShift(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetShrinkFactors(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void MaximumOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void MaximumOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void MeanOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void MeanOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void MedianOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void MedianOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void MinimumOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void MinimumOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetAveraging(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetMaximum(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetMean(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetMedian(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetMinimum(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetShift(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetShrinkFactors(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
