/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKFIXEDPOINTRAYCASTIMAGEWRAP_H
#define NATIVE_EXTENSION_VTK_VTKFIXEDPOINTRAYCASTIMAGEWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkFixedPointRayCastImage.h>

#include "vtkObjectWrap.h"
#include "../../plus/plus.h"

class VtkFixedPointRayCastImageWrap : public VtkObjectWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkFixedPointRayCastImageWrap(vtkSmartPointer<vtkFixedPointRayCastImage>);
		VtkFixedPointRayCastImageWrap();
		~VtkFixedPointRayCastImageWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void AllocateImage(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void AllocateZBuffer(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ClearImage(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetImageInUseSize(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetImageMemorySize(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetImageOrigin(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetImageViewportSize(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetUseZBuffer(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetUseZBufferMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetUseZBufferMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetZBufferOrigin(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetZBufferSize(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetImageInUseSize(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetImageMemorySize(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetImageOrigin(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetImageViewportSize(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetUseZBuffer(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetZBufferOrigin(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetZBufferSize(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void UseZBufferOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void UseZBufferOn(const Nan::FunctionCallbackInfo<v8::Value>& info);

#ifdef VTK_NODE_PLUS_VTKFIXEDPOINTRAYCASTIMAGEWRAP_CLASSDEF
		VTK_NODE_PLUS_VTKFIXEDPOINTRAYCASTIMAGEWRAP_CLASSDEF
#endif
};

#endif
