/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKLANDMARKTRANSFORMWRAP_H
#define NATIVE_EXTENSION_VTK_VTKLANDMARKTRANSFORMWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkLandmarkTransform.h>

#include "vtkLinearTransformWrap.h"
#include "../../plus/plus.h"

class VtkLandmarkTransformWrap : public VtkLinearTransformWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkLandmarkTransformWrap(vtkSmartPointer<vtkLandmarkTransform>);
		VtkLandmarkTransformWrap();
		~VtkLandmarkTransformWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetMode(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetModeAsString(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetSourceLandmarks(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetTargetLandmarks(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void Inverse(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void MakeTransform(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetMode(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetModeToAffine(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetModeToRigidBody(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetModeToSimilarity(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetSourceLandmarks(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetTargetLandmarks(const Nan::FunctionCallbackInfo<v8::Value>& info);

#ifdef VTK_NODE_PLUS_VTKLANDMARKTRANSFORMWRAP_CLASSDEF
		VTK_NODE_PLUS_VTKLANDMARKTRANSFORMWRAP_CLASSDEF
#endif
};

#endif
