/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKTHRESHOLDWRAP_H
#define NATIVE_EXTENSION_VTK_VTKTHRESHOLDWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkThreshold.h>

#include "vtkUnstructuredGridAlgorithmWrap.h"

class VtkThresholdWrap : public VtkUnstructuredGridAlgorithmWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkThresholdWrap(vtkSmartPointer<vtkThreshold>);
		VtkThresholdWrap();
		~VtkThresholdWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void AllScalarsOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void AllScalarsOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetAllScalars(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetAttributeMode(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetAttributeModeAsString(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetComponentMode(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetComponentModeAsString(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetComponentModeMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetComponentModeMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetLowerThreshold(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetOutputPointsPrecision(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetPointsDataType(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetSelectedComponent(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetSelectedComponentMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetSelectedComponentMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetUpperThreshold(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetUseContinuousCellRange(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetAllScalars(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetAttributeMode(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetAttributeModeToDefault(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetAttributeModeToUseCellData(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetAttributeModeToUsePointData(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetComponentMode(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetComponentModeToUseAll(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetComponentModeToUseAny(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetComponentModeToUseSelected(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetOutputPointsPrecision(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetPointsDataType(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetPointsDataTypeToDouble(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetPointsDataTypeToFloat(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetSelectedComponent(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetUseContinuousCellRange(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ThresholdBetween(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ThresholdByLower(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ThresholdByUpper(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void UseContinuousCellRangeOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void UseContinuousCellRangeOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
