/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKEXODUSIIWRITERWRAP_H
#define NATIVE_EXTENSION_VTK_VTKEXODUSIIWRITERWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkExodusIIWriter.h>

#include "vtkWriterWrap.h"
#include "../../plus/plus.h"

class VtkExodusIIWriterWrap : public VtkWriterWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkExodusIIWriterWrap(vtkSmartPointer<vtkExodusIIWriter>);
		VtkExodusIIWriterWrap();
		~VtkExodusIIWriterWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void GetBlockIdArrayName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetFileName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetGhostLevel(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetIgnoreMetaDataWarning(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetModelMetadata(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetStoreDoubles(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetWriteAllTimeSteps(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetWriteOutBlockIdArray(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetWriteOutGlobalElementIdArray(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetWriteOutGlobalNodeIdArray(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IgnoreMetaDataWarningOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IgnoreMetaDataWarningOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetBlockIdArrayName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetFileName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetGhostLevel(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetIgnoreMetaDataWarning(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetModelMetadata(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetStoreDoubles(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetWriteAllTimeSteps(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetWriteOutBlockIdArray(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetWriteOutGlobalElementIdArray(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetWriteOutGlobalNodeIdArray(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void WriteAllTimeStepsOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void WriteAllTimeStepsOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void WriteOutBlockIdArrayOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void WriteOutBlockIdArrayOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void WriteOutGlobalElementIdArrayOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void WriteOutGlobalElementIdArrayOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void WriteOutGlobalNodeIdArrayOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void WriteOutGlobalNodeIdArrayOn(const Nan::FunctionCallbackInfo<v8::Value>& info);

#ifdef VTK_NODE_PLUS_VTKEXODUSIIWRITERWRAP_CLASSDEF
		VTK_NODE_PLUS_VTKEXODUSIIWRITERWRAP_CLASSDEF
#endif
};

#endif
