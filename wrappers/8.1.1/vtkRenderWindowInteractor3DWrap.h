/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKRENDERWINDOWINTERACTOR3DWRAP_H
#define NATIVE_EXTENSION_VTK_VTKRENDERWINDOWINTERACTOR3DWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkRenderWindowInteractor3D.h>

#include "vtkRenderWindowInteractorWrap.h"
#include "../../plus/plus.h"

class VtkRenderWindowInteractor3DWrap : public VtkRenderWindowInteractorWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkRenderWindowInteractor3DWrap(vtkSmartPointer<vtkRenderWindowInteractor3D>);
		VtkRenderWindowInteractor3DWrap();
		~VtkRenderWindowInteractor3DWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void Disable(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void Enable(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetDone(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetLastTranslation3D(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetPhysicalScale(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetTouchPadPosition(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetTranslation3D(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void MiddleButtonPressEvent(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void MiddleButtonReleaseEvent(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void RightButtonPressEvent(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void RightButtonReleaseEvent(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetPhysicalEventPosition(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetPhysicalScale(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetPhysicalTranslation(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetTouchPadPosition(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetTranslation3D(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetWorldEventOrientation(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetWorldEventPosition(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void TerminateApp(const Nan::FunctionCallbackInfo<v8::Value>& info);

#ifdef VTK_NODE_PLUS_VTKRENDERWINDOWINTERACTOR3DWRAP_CLASSDEF
		VTK_NODE_PLUS_VTKRENDERWINDOWINTERACTOR3DWRAP_CLASSDEF
#endif
};

#endif
