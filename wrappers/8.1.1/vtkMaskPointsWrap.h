/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKMASKPOINTSWRAP_H
#define NATIVE_EXTENSION_VTK_VTKMASKPOINTSWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkMaskPoints.h>

#include "vtkPolyDataAlgorithmWrap.h"
#include "../../plus/plus.h"

class VtkMaskPointsWrap : public VtkPolyDataAlgorithmWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkMaskPointsWrap(vtkSmartPointer<vtkMaskPoints>);
		VtkMaskPointsWrap();
		~VtkMaskPointsWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void GenerateVerticesOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GenerateVerticesOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetGenerateVertices(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetOnRatio(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetOnRatioMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetOnRatioMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetOutputPointsPrecision(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetProportionalMaximumNumberOfPoints(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetRandomMode(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetRandomModeType(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetRandomModeTypeMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetRandomModeTypeMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetSingleVertexPerCell(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ProportionalMaximumNumberOfPointsOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ProportionalMaximumNumberOfPointsOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void RandomModeOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void RandomModeOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetGenerateVertices(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetOnRatio(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetOutputPointsPrecision(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetProportionalMaximumNumberOfPoints(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetRandomMode(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetRandomModeType(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetSingleVertexPerCell(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SingleVertexPerCellOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SingleVertexPerCellOn(const Nan::FunctionCallbackInfo<v8::Value>& info);

#ifdef VTK_NODE_PLUS_VTKMASKPOINTSWRAP_CLASSDEF
		VTK_NODE_PLUS_VTKMASKPOINTSWRAP_CLASSDEF
#endif
};

#endif
