/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKFINITEPLANEREPRESENTATIONWRAP_H
#define NATIVE_EXTENSION_VTK_VTKFINITEPLANEREPRESENTATIONWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkFinitePlaneRepresentation.h>

#include "vtkWidgetRepresentationWrap.h"
#include "../../plus/plus.h"

class VtkFinitePlaneRepresentationWrap : public VtkWidgetRepresentationWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkFinitePlaneRepresentationWrap(vtkSmartPointer<vtkFinitePlaneRepresentation>);
		VtkFinitePlaneRepresentationWrap();
		~VtkFinitePlaneRepresentationWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void BuildRepresentation(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ComputeInteractionState(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void DrawPlaneOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void DrawPlaneOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetDrawPlane(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetInteractionStateMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetInteractionStateMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNormal(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNormalProperty(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetOrigin(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetPlaneProperty(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetPolyData(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetRepresentationState(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetSelectedHandleProperty(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetSelectedNormalProperty(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetSelectedPlaneProperty(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetTubing(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetV1(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetV1HandleProperty(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetV2(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetV2HandleProperty(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void HandlesOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void HandlesOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void HasTranslucentPolygonalGeometry(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void PlaceWidget(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ReleaseGraphicsResources(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void RenderOpaqueGeometry(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void RenderTranslucentPolygonalGeometry(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetDrawPlane(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetHandles(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetInteractionState(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetNormal(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetOrigin(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetRepresentationState(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetTubing(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetV1(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetV2(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void StartWidgetInteraction(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void TubingOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void TubingOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void WidgetInteraction(const Nan::FunctionCallbackInfo<v8::Value>& info);

#ifdef VTK_NODE_PLUS_VTKFINITEPLANEREPRESENTATIONWRAP_CLASSDEF
		VTK_NODE_PLUS_VTKFINITEPLANEREPRESENTATIONWRAP_CLASSDEF
#endif
};

#endif
