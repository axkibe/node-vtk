/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKHIERARCHICALGRAPHVIEWWRAP_H
#define NATIVE_EXTENSION_VTK_VTKHIERARCHICALGRAPHVIEWWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkHierarchicalGraphView.h>

#include "vtkGraphLayoutViewWrap.h"
#include "../../plus/plus.h"

class VtkHierarchicalGraphViewWrap : public VtkGraphLayoutViewWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkHierarchicalGraphViewWrap(vtkSmartPointer<vtkHierarchicalGraphView>);
		VtkHierarchicalGraphViewWrap();
		~VtkHierarchicalGraphViewWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void ColorGraphEdgesByArrayOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ColorGraphEdgesByArrayOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetBundlingStrength(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetColorGraphEdgesByArray(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetGraphEdgeColorArrayName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetGraphEdgeLabelArrayName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetGraphEdgeLabelFontSize(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetGraphEdgeLabelVisibility(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetGraphVisibility(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GraphEdgeLabelVisibilityOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GraphEdgeLabelVisibilityOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GraphVisibilityOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GraphVisibilityOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetBundlingStrength(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetColorGraphEdgesByArray(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetGraphEdgeColorArrayName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetGraphEdgeColorToSplineFraction(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetGraphEdgeLabelArrayName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetGraphEdgeLabelFontSize(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetGraphEdgeLabelVisibility(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetGraphFromInput(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetGraphFromInputConnection(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetGraphVisibility(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetHierarchyFromInput(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetHierarchyFromInputConnection(const Nan::FunctionCallbackInfo<v8::Value>& info);

#ifdef VTK_NODE_PLUS_VTKHIERARCHICALGRAPHVIEWWRAP_CLASSDEF
		VTK_NODE_PLUS_VTKHIERARCHICALGRAPHVIEWWRAP_CLASSDEF
#endif
};

#endif
