/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKVOLUMERAYCASTSPACELEAPINGIMAGEFILTERWRAP_H
#define NATIVE_EXTENSION_VTK_VTKVOLUMERAYCASTSPACELEAPINGIMAGEFILTERWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkVolumeRayCastSpaceLeapingImageFilter.h>

#include "vtkThreadedImageAlgorithmWrap.h"
#include "../../plus/plus.h"

class VtkVolumeRayCastSpaceLeapingImageFilterWrap : public VtkThreadedImageAlgorithmWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkVolumeRayCastSpaceLeapingImageFilterWrap(vtkSmartPointer<vtkVolumeRayCastSpaceLeapingImageFilter>);
		VtkVolumeRayCastSpaceLeapingImageFilterWrap();
		~VtkVolumeRayCastSpaceLeapingImageFilterWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void ComputeGradientOpacityOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ComputeGradientOpacityOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ComputeInputExtentsForOutput(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ComputeMinMaxOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ComputeMinMaxOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetComputeGradientOpacity(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetComputeMinMax(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetCurrentScalars(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetIndependentComponents(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNumberOfIndependentComponents(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetTableScale(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetTableShift(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetTableSize(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetUpdateGradientOpacityFlags(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCache(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetComputeGradientOpacity(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetComputeMinMax(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCurrentScalars(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetIndependentComponents(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetTableScale(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetTableShift(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetTableSize(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetUpdateGradientOpacityFlags(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void UpdateGradientOpacityFlagsOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void UpdateGradientOpacityFlagsOn(const Nan::FunctionCallbackInfo<v8::Value>& info);

#ifdef VTK_NODE_PLUS_VTKVOLUMERAYCASTSPACELEAPINGIMAGEFILTERWRAP_CLASSDEF
		VTK_NODE_PLUS_VTKVOLUMERAYCASTSPACELEAPINGIMAGEFILTERWRAP_CLASSDEF
#endif
};

#endif
