/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKINCREMENTALFORCELAYOUTWRAP_H
#define NATIVE_EXTENSION_VTK_VTKINCREMENTALFORCELAYOUTWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkIncrementalForceLayout.h>

#include "vtkObjectWrap.h"
#include "../../plus/plus.h"

class VtkIncrementalForceLayoutWrap : public VtkObjectWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkIncrementalForceLayoutWrap(vtkSmartPointer<vtkIncrementalForceLayout>);
		VtkIncrementalForceLayoutWrap();
		~VtkIncrementalForceLayoutWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void GetAlpha(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetCharge(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetDistance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetFriction(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetGraph(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetGravity(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetStrength(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetTheta(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetAlpha(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCharge(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetDistance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetFriction(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetGraph(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetGravity(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetStrength(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetTheta(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void UpdatePositions(const Nan::FunctionCallbackInfo<v8::Value>& info);

#ifdef VTK_NODE_PLUS_VTKINCREMENTALFORCELAYOUTWRAP_CLASSDEF
		VTK_NODE_PLUS_VTKINCREMENTALFORCELAYOUTWRAP_CLASSDEF
#endif
};

#endif
