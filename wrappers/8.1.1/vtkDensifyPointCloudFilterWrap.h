/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKDENSIFYPOINTCLOUDFILTERWRAP_H
#define NATIVE_EXTENSION_VTK_VTKDENSIFYPOINTCLOUDFILTERWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkDensifyPointCloudFilter.h>

#include "vtkPolyDataAlgorithmWrap.h"
#include "../../plus/plus.h"

class VtkDensifyPointCloudFilterWrap : public VtkPolyDataAlgorithmWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkDensifyPointCloudFilterWrap(vtkSmartPointer<vtkDensifyPointCloudFilter>);
		VtkDensifyPointCloudFilterWrap();
		~VtkDensifyPointCloudFilterWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void GetInterpolateAttributeData(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetMaximumNumberOfIterations(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetMaximumNumberOfIterationsMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetMaximumNumberOfIterationsMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNeighborhoodType(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNumberOfClosestPoints(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNumberOfClosestPointsMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNumberOfClosestPointsMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetRadius(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetRadiusMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetRadiusMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetTargetDistance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetTargetDistanceMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetTargetDistanceMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void InterpolateAttributeDataOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void InterpolateAttributeDataOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetInterpolateAttributeData(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetMaximumNumberOfIterations(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetNeighborhoodType(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetNeighborhoodTypeToNClosest(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetNeighborhoodTypeToRadius(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetNumberOfClosestPoints(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetRadius(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetTargetDistance(const Nan::FunctionCallbackInfo<v8::Value>& info);

#ifdef VTK_NODE_PLUS_VTKDENSIFYPOINTCLOUDFILTERWRAP_CLASSDEF
		VTK_NODE_PLUS_VTKDENSIFYPOINTCLOUDFILTERWRAP_CLASSDEF
#endif
};

#endif
