/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKUNSIGNEDDISTANCEWRAP_H
#define NATIVE_EXTENSION_VTK_VTKUNSIGNEDDISTANCEWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkUnsignedDistance.h>

#include "vtkImageAlgorithmWrap.h"
#include "../../plus/plus.h"

class VtkUnsignedDistanceWrap : public VtkImageAlgorithmWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkUnsignedDistanceWrap(vtkSmartPointer<vtkUnsignedDistance>);
		VtkUnsignedDistanceWrap();
		~VtkUnsignedDistanceWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void AdjustBoundsOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void AdjustBoundsOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void Append(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void CappingOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void CappingOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void EndAppend(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetAdjustBounds(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetAdjustDistance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetAdjustDistanceMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetAdjustDistanceMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetBounds(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetCapValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetCapping(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetDimensions(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetLocator(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetOutputScalarType(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetRadius(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetRadiusMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetRadiusMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetAdjustBounds(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetAdjustDistance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetBounds(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCapValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCapping(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetDimensions(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetLocator(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetOutputScalarType(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetOutputScalarTypeToDouble(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetOutputScalarTypeToFloat(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetRadius(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void StartAppend(const Nan::FunctionCallbackInfo<v8::Value>& info);

#ifdef VTK_NODE_PLUS_VTKUNSIGNEDDISTANCEWRAP_CLASSDEF
		VTK_NODE_PLUS_VTKUNSIGNEDDISTANCEWRAP_CLASSDEF
#endif
};

#endif
