/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKLOOPBOOLEANPOLYDATAFILTERWRAP_H
#define NATIVE_EXTENSION_VTK_VTKLOOPBOOLEANPOLYDATAFILTERWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkLoopBooleanPolyDataFilter.h>

#include "vtkPolyDataAlgorithmWrap.h"
#include "../../plus/plus.h"

class VtkLoopBooleanPolyDataFilterWrap : public VtkPolyDataAlgorithmWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkLoopBooleanPolyDataFilterWrap(vtkSmartPointer<vtkLoopBooleanPolyDataFilter>);
		VtkLoopBooleanPolyDataFilterWrap();
		~VtkLoopBooleanPolyDataFilterWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void GetNoIntersectionOutput(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNumberOfIntersectionLines(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNumberOfIntersectionPoints(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetOperation(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetOperationMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetOperationMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetStatus(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetTolerance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NoIntersectionOutputOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NoIntersectionOutputOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetNoIntersectionOutput(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetOperation(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetOperationToDifference(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetOperationToIntersection(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetOperationToUnion(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetTolerance(const Nan::FunctionCallbackInfo<v8::Value>& info);

#ifdef VTK_NODE_PLUS_VTKLOOPBOOLEANPOLYDATAFILTERWRAP_CLASSDEF
		VTK_NODE_PLUS_VTKLOOPBOOLEANPOLYDATAFILTERWRAP_CLASSDEF
#endif
};

#endif
