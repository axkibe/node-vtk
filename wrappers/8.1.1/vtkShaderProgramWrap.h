/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKSHADERPROGRAMWRAP_H
#define NATIVE_EXTENSION_VTK_VTKSHADERPROGRAMWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkShaderProgram.h>

#include "vtkObjectWrap.h"
#include "../../plus/plus.h"

class VtkShaderProgramWrap : public VtkObjectWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkShaderProgramWrap(vtkSmartPointer<vtkShaderProgram>);
		VtkShaderProgramWrap();
		~VtkShaderProgramWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void CompiledOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void CompiledOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void DisableAttributeArray(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void EnableAttributeArray(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetCompiled(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetFileNamePrefixForDebugging(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetFragmentShader(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetGeometryShader(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetHandle(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetVertexShader(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsAttributeUsed(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsUniformUsed(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ReleaseGraphicsResources(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCompiled(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetFileNamePrefixForDebugging(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetFragmentShader(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetGeometryShader(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetNumberOfOutputs(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetUniform2f(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetUniform2i(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetUniform3f(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetUniform3uc(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetUniform4f(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetUniform4uc(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetUniformMatrix(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetUniformf(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetUniformi(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetVertexShader(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void isBound(const Nan::FunctionCallbackInfo<v8::Value>& info);

#ifdef VTK_NODE_PLUS_VTKSHADERPROGRAMWRAP_CLASSDEF
		VTK_NODE_PLUS_VTKSHADERPROGRAMWRAP_CLASSDEF
#endif
};

#endif
