/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKLINEARSELECTORWRAP_H
#define NATIVE_EXTENSION_VTK_VTKLINEARSELECTORWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkLinearSelector.h>

#include "vtkSelectionAlgorithmWrap.h"
#include "../../plus/plus.h"

class VtkLinearSelectorWrap : public VtkSelectionAlgorithmWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkLinearSelectorWrap(vtkSmartPointer<vtkLinearSelector>);
		VtkLinearSelectorWrap();
		~VtkLinearSelectorWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void GetEndPoint(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetIncludeVertices(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetPoints(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetStartPoint(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetTolerance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetVertexEliminationTolerance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetVertexEliminationToleranceMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetVertexEliminationToleranceMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IncludeVerticesOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IncludeVerticesOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetEndPoint(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetIncludeVertices(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetPoints(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetStartPoint(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetTolerance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetVertexEliminationTolerance(const Nan::FunctionCallbackInfo<v8::Value>& info);

#ifdef VTK_NODE_PLUS_VTKLINEARSELECTORWRAP_CLASSDEF
		VTK_NODE_PLUS_VTKLINEARSELECTORWRAP_CLASSDEF
#endif
};

#endif
