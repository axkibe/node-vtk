/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKXMLDATAPARSERWRAP_H
#define NATIVE_EXTENSION_VTK_VTKXMLDATAPARSERWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkXMLDataParser.h>

#include "vtkXMLParserWrap.h"
#include "../../plus/plus.h"

class VtkXMLDataParserWrap : public VtkXMLParserWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkXMLDataParserWrap(vtkSmartPointer<vtkXMLDataParser>);
		VtkXMLDataParserWrap();
		~VtkXMLDataParserWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void CharacterDataHandler(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetAbort(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetAttributesEncoding(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetAttributesEncodingMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetAttributesEncodingMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetCompressor(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetProgress(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetRootElement(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void Parse(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetAbort(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetAttributesEncoding(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCompressor(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetProgress(const Nan::FunctionCallbackInfo<v8::Value>& info);

#ifdef VTK_NODE_PLUS_VTKXMLDATAPARSERWRAP_CLASSDEF
		VTK_NODE_PLUS_VTKXMLDATAPARSERWRAP_CLASSDEF
#endif
};

#endif
