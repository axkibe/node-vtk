/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKEXTRACTTIMESTEPSWRAP_H
#define NATIVE_EXTENSION_VTK_VTKEXTRACTTIMESTEPSWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkExtractTimeSteps.h>

#include "vtkPassInputTypeAlgorithmWrap.h"
#include "../../plus/plus.h"

class VtkExtractTimeStepsWrap : public VtkPassInputTypeAlgorithmWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkExtractTimeStepsWrap(vtkSmartPointer<vtkExtractTimeSteps>);
		VtkExtractTimeStepsWrap();
		~VtkExtractTimeStepsWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void AddTimeStepIndex(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ClearTimeStepIndices(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GenerateTimeStepIndices(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNumberOfTimeSteps(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetRange(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetTimeEstimationMode(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetTimeStepInterval(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetTimeStepIntervalMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetTimeStepIntervalMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetUseRange(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetRange(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetTimeEstimationMode(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetTimeEstimationModeToNearest(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetTimeEstimationModeToNext(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetTimeEstimationModeToPrevious(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetTimeStepInterval(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetUseRange(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void UseRangeOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void UseRangeOn(const Nan::FunctionCallbackInfo<v8::Value>& info);

#ifdef VTK_NODE_PLUS_VTKEXTRACTTIMESTEPSWRAP_CLASSDEF
		VTK_NODE_PLUS_VTKEXTRACTTIMESTEPSWRAP_CLASSDEF
#endif
};

#endif
