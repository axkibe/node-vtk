/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKENCODEDGRADIENTSHADERWRAP_H
#define NATIVE_EXTENSION_VTK_VTKENCODEDGRADIENTSHADERWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkEncodedGradientShader.h>

#include "vtkObjectWrap.h"
#include "../../plus/plus.h"

class VtkEncodedGradientShaderWrap : public VtkObjectWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkEncodedGradientShaderWrap(vtkSmartPointer<vtkEncodedGradientShader>);
		VtkEncodedGradientShaderWrap();
		~VtkEncodedGradientShaderWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void GetActiveComponent(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetActiveComponentMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetActiveComponentMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetZeroNormalDiffuseIntensity(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetZeroNormalDiffuseIntensityMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetZeroNormalDiffuseIntensityMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetZeroNormalSpecularIntensity(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetZeroNormalSpecularIntensityMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetZeroNormalSpecularIntensityMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetActiveComponent(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetZeroNormalDiffuseIntensity(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetZeroNormalSpecularIntensity(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void UpdateShadingTable(const Nan::FunctionCallbackInfo<v8::Value>& info);

#ifdef VTK_NODE_PLUS_VTKENCODEDGRADIENTSHADERWRAP_CLASSDEF
		VTK_NODE_PLUS_VTKENCODEDGRADIENTSHADERWRAP_CLASSDEF
#endif
};

#endif
