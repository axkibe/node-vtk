/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKSIMPLESCALARTREEWRAP_H
#define NATIVE_EXTENSION_VTK_VTKSIMPLESCALARTREEWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkSimpleScalarTree.h>

#include "vtkScalarTreeWrap.h"
#include "../../plus/plus.h"

class VtkSimpleScalarTreeWrap : public VtkScalarTreeWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkSimpleScalarTreeWrap(vtkSmartPointer<vtkSimpleScalarTree>);
		VtkSimpleScalarTreeWrap();
		~VtkSimpleScalarTreeWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void BuildTree(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetBranchingFactor(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetBranchingFactorMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetBranchingFactorMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetLevel(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetMaxLevel(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetMaxLevelMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetMaxLevelMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void InitTraversal(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void Initialize(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetBranchingFactor(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetMaxLevel(const Nan::FunctionCallbackInfo<v8::Value>& info);

#ifdef VTK_NODE_PLUS_VTKSIMPLESCALARTREEWRAP_CLASSDEF
		VTK_NODE_PLUS_VTKSIMPLESCALARTREEWRAP_CLASSDEF
#endif
};

#endif
