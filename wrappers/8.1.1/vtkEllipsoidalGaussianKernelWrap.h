/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKELLIPSOIDALGAUSSIANKERNELWRAP_H
#define NATIVE_EXTENSION_VTK_VTKELLIPSOIDALGAUSSIANKERNELWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkEllipsoidalGaussianKernel.h>

#include "vtkGeneralizedKernelWrap.h"
#include "../../plus/plus.h"

class VtkEllipsoidalGaussianKernelWrap : public VtkGeneralizedKernelWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkEllipsoidalGaussianKernelWrap(vtkSmartPointer<vtkEllipsoidalGaussianKernel>);
		VtkEllipsoidalGaussianKernelWrap();
		~VtkEllipsoidalGaussianKernelWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void GetEccentricity(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetEccentricityMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetEccentricityMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetScaleFactor(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetScaleFactorMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetScaleFactorMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetSharpness(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetSharpnessMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetSharpnessMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetUseNormals(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetUseScalars(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void Initialize(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetEccentricity(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetScaleFactor(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetSharpness(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetUseNormals(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetUseScalars(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void UseNormalsOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void UseNormalsOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void UseScalarsOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void UseScalarsOn(const Nan::FunctionCallbackInfo<v8::Value>& info);

#ifdef VTK_NODE_PLUS_VTKELLIPSOIDALGAUSSIANKERNELWRAP_CLASSDEF
		VTK_NODE_PLUS_VTKELLIPSOIDALGAUSSIANKERNELWRAP_CLASSDEF
#endif
};

#endif
