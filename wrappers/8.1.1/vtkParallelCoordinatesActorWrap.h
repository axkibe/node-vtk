/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKPARALLELCOORDINATESACTORWRAP_H
#define NATIVE_EXTENSION_VTK_VTKPARALLELCOORDINATESACTORWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkParallelCoordinatesActor.h>

#include "vtkActor2DWrap.h"
#include "../../plus/plus.h"

class VtkParallelCoordinatesActorWrap : public VtkActor2DWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkParallelCoordinatesActorWrap(vtkSmartPointer<vtkParallelCoordinatesActor>);
		VtkParallelCoordinatesActorWrap();
		~VtkParallelCoordinatesActorWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void GetIndependentVariables(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetIndependentVariablesMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetIndependentVariablesMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetInput(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetLabelFormat(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetLabelTextProperty(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNumberOfLabels(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNumberOfLabelsMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNumberOfLabelsMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetTitle(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetTitleTextProperty(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void HasTranslucentPolygonalGeometry(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ReleaseGraphicsResources(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void RenderOpaqueGeometry(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void RenderOverlay(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void RenderTranslucentPolygonalGeometry(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetIndependentVariables(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetIndependentVariablesToColumns(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetIndependentVariablesToRows(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetInputConnection(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetInputData(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetLabelFormat(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetLabelTextProperty(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetNumberOfLabels(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetTitle(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetTitleTextProperty(const Nan::FunctionCallbackInfo<v8::Value>& info);

#ifdef VTK_NODE_PLUS_VTKPARALLELCOORDINATESACTORWRAP_CLASSDEF
		VTK_NODE_PLUS_VTKPARALLELCOORDINATESACTORWRAP_CLASSDEF
#endif
};

#endif
