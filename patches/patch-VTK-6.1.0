diff -urB VTK-6.1.0-org/CMake/vtkModuleMacros.cmake VTK-6.1.0/CMake/vtkModuleMacros.cmake
--- VTK-6.1.0-org/CMake/vtkModuleMacros.cmake	2014-01-22 16:55:41.000000000 +0100
+++ VTK-6.1.0/CMake/vtkModuleMacros.cmake	2016-01-13 09:50:49.631074605 +0100
@@ -234,7 +234,7 @@
       DESTINATION ${VTK_INSTALL_PACKAGE_DIR}/Modules
       COMPONENT Development)
     if(NOT ${vtk-module}_EXCLUDE_FROM_WRAPPING)
-      if(VTK_WRAP_PYTHON OR VTK_WRAP_TCL OR VTK_WRAP_JAVA)
+      if(VTK_WRAP_PYTHON OR VTK_WRAP_TCL OR VTK_WRAP_JAVA OR VTK_WRAP_NODEJS)
         install(FILES ${${vtk-module}_WRAP_HIERARCHY_FILE}
           DESTINATION ${VTK_INSTALL_PACKAGE_DIR}/Modules
           COMPONENT Development)
@@ -515,7 +515,7 @@
   # TODO: Re-order things so we do not need to duplicate this condition.
   if(NOT ${vtk-module}_EXCLUDE_FROM_WRAPPING AND
       NOT ${vtk-module}_EXCLUDE_FROM_WRAP_HIERARCHY AND
-      ( VTK_WRAP_PYTHON OR VTK_WRAP_TCL OR VTK_WRAP_JAVA ))
+      ( VTK_WRAP_PYTHON OR VTK_WRAP_TCL OR VTK_WRAP_JAVA OR VTK_WRAP_NODEJS ))
     set(_hierarchy ${CMAKE_CURRENT_BINARY_DIR}/${vtk-module}Hierarchy.stamp)
   else()
     set(_hierarchy "")
Only in VTK-6.1.0/CMake: vtkNodeJsWrapping.cmake
Only in VTK-6.1.0/CMake: vtkWrapNodeJs.cmake
diff -urB VTK-6.1.0-org/CMake/vtkWrapping.cmake VTK-6.1.0/CMake/vtkWrapping.cmake
--- VTK-6.1.0-org/CMake/vtkWrapping.cmake	2014-01-22 16:55:41.000000000 +0100
+++ VTK-6.1.0/CMake/vtkWrapping.cmake	2016-01-13 10:15:02.608743161 +0100
@@ -6,6 +6,9 @@
 if(VTK_WRAP_PYTHON)
 #  include(vtkPythonWrapping)
 endif()
+if(VTK_WRAP_NODEJS)
+  include(vtkNodeJsWrapping)
+endif()
 if(VTK_WRAP_TCL)
   include(vtkTclWrapping)
 endif()
@@ -24,7 +27,7 @@
 function(vtk_add_wrapping module_name module_srcs module_hdrs)
   if(NOT ${module_name}_EXCLUDE_FROM_WRAPPING)
     set(_wrap_module FALSE)
-    if(VTK_WRAP_PYTHON OR VTK_WRAP_TCL OR VTK_WRAP_JAVA)
+    if(VTK_WRAP_PYTHON OR VTK_WRAP_TCL OR VTK_WRAP_JAVA OR VTK_WRAP_NODEJS)
       set(_wrap_module TRUE)
     endif()
 
@@ -58,6 +61,9 @@
         # Note that the module should be Python wrapped.
         set_property(GLOBAL APPEND PROPERTY VTK_PYTHON_WRAPPED ${module_name})
       endif()
+      if(VTK_WRAP_NODEJS)
+        set_property(GLOBAL APPEND PROPERTY VTK_NODEJS_WRAPPED ${module_name})
+      endif()
       if(VTK_WRAP_TCL)
         set_property(GLOBAL APPEND PROPERTY VTK_TCL_WRAPPED ${module_name})
         vtk_add_tcl_wrapping(${module_name} "${module_srcs}" "${module_hdrs}")
diff -urB VTK-6.1.0-org/CMake/vtkWrapPython.cmake VTK-6.1.0/CMake/vtkWrapPython.cmake
--- VTK-6.1.0-org/CMake/vtkWrapPython.cmake	2014-01-22 16:55:41.000000000 +0100
+++ VTK-6.1.0/CMake/vtkWrapPython.cmake	2016-01-13 11:39:45.959845810 +0100
@@ -113,6 +113,11 @@
           "${quote}@${_args_file}${quote}"
           "-o" "${quote}${CMAKE_CURRENT_BINARY_DIR}/${TMP_FILENAME}Python.cxx${quote}"
           "${quote}${TMP_INPUT}${quote}"
+#        COMMAND ${VTK_WRAP_NODEJS_EXE}
+#          ARGS
+#          "${quote}@${_args_file}${quote}"
+#          "-o" "${quote}${CMAKE_BINARY_DIR}/NodeJs/${TMP_FILENAME}Wrap.cxx${quote}"
+#          "${quote}${TMP_INPUT}${quote}"
         COMMENT "Python Wrapping - generating ${TMP_FILENAME}Python.cxx"
           ${verbatim}
         )
@@ -313,6 +319,11 @@
           "${quote}@${_args_file}${quote}"
           "-o" "${quote}${CMAKE_CURRENT_BINARY_DIR}/${header}Python.cxx${quote}"
           "${quote}${class_header_path}${quote}"
+#        COMMAND ${VTK_WRAP_NODEJS_EXE}
+#          ARGS
+#          "${quote}@${_args_file}${quote}"
+#          "-o" "${quote}${CMAKE_BINARY_DIR}/NodeJs/${header}Wrap.cxx${quote}"
+#          "${quote}${class_header_path}${quote}"
         COMMENT "Python Wrapping - generating ${header}Python.cxx"
           ${verbatim}
         )
diff -urB VTK-6.1.0-org/CMakeLists.txt VTK-6.1.0/CMakeLists.txt
--- VTK-6.1.0-org/CMakeLists.txt	2014-01-22 16:55:41.000000000 +0100
+++ VTK-6.1.0/CMakeLists.txt	2016-01-12 15:47:50.238257364 +0100
@@ -279,6 +279,9 @@
 # Add the option for build the Python wrapping to VTK.
 option(VTK_WRAP_PYTHON "Should VTK Python wrapping be built?" OFF)
 
+# Add the option for build the NodeJS wrapping to VTK.
+option(VTK_WRAP_NODEJS "Should VTK NodeJS wrapping be built?" ON)
+
 # Add the option for build the Python wrapping to VTK.
 option(VTK_WRAP_JAVA "Should VTK Java wrapping be built?" OFF)
 
@@ -315,6 +318,19 @@
     FORCE)
 endif()
 
+if(VTK_WRAP_NODEJS)
+  set(VTK_WRAP_NODEJS_EXE vtkWrapNodeJs)
+  set(VTK_WRAP_NODEJS_INIT_EXE vtkWrapNodeJsInit)
+  set(VTK_NODEJS_EXE vtknodejs)
+  # Force the WrappingNodeJSCore module to on if wrapping is on
+  set(Module_vtkWrappingNodeJs ON CACHE BOOL "Core Node.js wrapping library"
+    FORCE)
+else()
+  # if wrapping is not on then force WrappingNodeJSCore module to be off
+  set(Module_vtkWrappingNodeJs OFF CACHE BOOL "Core Node.js wrapping library"
+    FORCE)
+endif()
+
 if(VTK_WRAP_JAVA)
   set(VTK_WRAP_JAVA3_INIT_DIR "${VTK_SOURCE_DIR}/Wrapping/Java")
   # Wrapping executables.
@@ -349,7 +365,7 @@
     FORCE)
 endif()
 
-if(VTK_WRAP_PYTHON OR VTK_WRAP_TCL OR VTK_WRAP_JAVA)
+if(VTK_WRAP_PYTHON OR VTK_WRAP_TCL OR VTK_WRAP_JAVA OR VTK_WRAP_NODEJS)
   set(VTK_WRAP_HIERARCHY_EXE vtkWrapHierarchy)
 endif()
 
diff -urB VTK-6.1.0-org/Rendering/OpenGL/vtkXOpenGLRenderWindow.cxx VTK-6.1.0/Rendering/OpenGL/vtkXOpenGLRenderWindow.cxx
--- VTK-6.1.0-org/Rendering/OpenGL/vtkXOpenGLRenderWindow.cxx	2014-01-22 16:55:41.000000000 +0100
+++ VTK-6.1.0/Rendering/OpenGL/vtkXOpenGLRenderWindow.cxx	2016-01-07 18:39:28.143210053 +0100
@@ -27,7 +27,7 @@
 
 // define GLX_GLXEXT_LEGACY to prevent glx.h to include glxext.h provided by
 // the system
-//#define GLX_GLXEXT_LEGACY
+#define GLX_GLXEXT_LEGACY
 #include "GL/glx.h"
 
 #include "vtkgl.h"
Only in VTK-6.1.0/Wrapping: NodeJs
diff -urB VTK-6.1.0-org/Wrapping/Tools/CMakeLists.txt VTK-6.1.0/Wrapping/Tools/CMakeLists.txt
--- VTK-6.1.0-org/Wrapping/Tools/CMakeLists.txt	2014-01-22 16:55:41.000000000 +0100
+++ VTK-6.1.0/Wrapping/Tools/CMakeLists.txt	2016-01-14 15:51:53.705503887 +0100
@@ -76,6 +76,12 @@
   add_executable(vtkWrapPythonInit vtkWrapPythonInit.c)
   vtk_compile_tools_target(vtkWrapPython)
   vtk_compile_tools_target(vtkWrapPythonInit)
+  
+  add_executable(vtkWrapNodeJs vtkWrapNodeJs.c)
+  target_link_libraries(vtkWrapNodeJs vtkWrappingTools)
+  add_executable(vtkWrapNodeJsInit vtkWrapNodeJsInit.c)
+  vtk_compile_tools_target(vtkWrapNodeJs)
+  vtk_compile_tools_target(vtkWrapNodeJsInit)
 
   add_executable(vtkParseJava vtkParseJava.c)
   target_link_libraries(vtkParseJava vtkWrappingTools)
Only in VTK-6.1.0/Wrapping/Tools: vtkWrapNodeJs.c
Only in VTK-6.1.0/Wrapping/Tools: vtkWrapNodeJsInit.c
