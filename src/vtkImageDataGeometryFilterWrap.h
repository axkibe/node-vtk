/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKIMAGEDATAGEOMETRYFILTERWRAP_H
#define NATIVE_EXTENSION_VTK_VTKIMAGEDATAGEOMETRYFILTERWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkImageDataGeometryFilter.h>

#include "vtkPolyDataAlgorithmWrap.h"

class VtkImageDataGeometryFilterWrap : public VtkPolyDataAlgorithmWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitTpl(v8::Local<v8::FunctionTemplate> tpl);

		VtkImageDataGeometryFilterWrap(vtkSmartPointer<vtkImageDataGeometryFilter>);
		VtkImageDataGeometryFilterWrap();
		~VtkImageDataGeometryFilterWrap( );
		static Nan::Persistent<v8::Function> constructor;
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetOutputTriangles(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetThresholdCells(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetThresholdValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void OutputTrianglesOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void OutputTrianglesOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetExtent(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetOutputTriangles(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetThresholdCells(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetThresholdValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ThresholdCellsOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ThresholdCellsOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ThresholdValueOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ThresholdValueOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
