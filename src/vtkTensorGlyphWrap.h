/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKTENSORGLYPHWRAP_H
#define NATIVE_EXTENSION_VTK_VTKTENSORGLYPHWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkTensorGlyph.h>

#include "vtkPolyDataAlgorithmWrap.h"

class VtkTensorGlyphWrap : public VtkPolyDataAlgorithmWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkTensorGlyphWrap(vtkSmartPointer<vtkTensorGlyph>);
		VtkTensorGlyphWrap();
		~VtkTensorGlyphWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void ClampScalingOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ClampScalingOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ColorGlyphsOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ColorGlyphsOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ExtractEigenvaluesOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ExtractEigenvaluesOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClampScaling(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetColorGlyphs(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetColorMode(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetColorModeMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetColorModeMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetExtractEigenvalues(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetLength(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetMaxScaleFactor(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetScaleFactor(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetScaling(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetSource(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetSymmetric(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetThreeGlyphs(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ScalingOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ScalingOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetClampScaling(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetColorGlyphs(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetColorMode(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetColorModeToEigenvalues(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetColorModeToScalars(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetExtractEigenvalues(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetLength(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetMaxScaleFactor(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetScaleFactor(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetScaling(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetSourceConnection(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetSourceData(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetSymmetric(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetThreeGlyphs(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SymmetricOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SymmetricOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ThreeGlyphsOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ThreeGlyphsOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
