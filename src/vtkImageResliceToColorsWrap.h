/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKIMAGERESLICETOCOLORSWRAP_H
#define NATIVE_EXTENSION_VTK_VTKIMAGERESLICETOCOLORSWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkImageResliceToColors.h>

#include "vtkImageResliceWrap.h"

class VtkImageResliceToColorsWrap : public VtkImageResliceWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitTpl(v8::Local<v8::FunctionTemplate> tpl);

		VtkImageResliceToColorsWrap(vtkSmartPointer<vtkImageResliceToColors>);
		VtkImageResliceToColorsWrap();
		~VtkImageResliceToColorsWrap( );
		static Nan::Persistent<v8::Function> constructor;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void BypassOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void BypassOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetBypass(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetLookupTable(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetOutputFormat(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetOutputFormatMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetOutputFormatMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetBypass(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetLookupTable(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetOutputFormat(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetOutputFormatToLuminance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetOutputFormatToLuminanceAlpha(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetOutputFormatToRGB(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetOutputFormatToRGBA(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
