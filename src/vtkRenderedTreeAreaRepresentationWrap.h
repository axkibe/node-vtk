/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKRENDEREDTREEAREAREPRESENTATIONWRAP_H
#define NATIVE_EXTENSION_VTK_VTKRENDEREDTREEAREAREPRESENTATIONWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkRenderedTreeAreaRepresentation.h>

#include "vtkRenderedRepresentationWrap.h"

class VtkRenderedTreeAreaRepresentationWrap : public VtkRenderedRepresentationWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitTpl(v8::Local<v8::FunctionTemplate> tpl);

		VtkRenderedTreeAreaRepresentationWrap(vtkSmartPointer<vtkRenderedTreeAreaRepresentation>);
		VtkRenderedTreeAreaRepresentationWrap();
		~VtkRenderedTreeAreaRepresentationWrap( );
		static Nan::Persistent<v8::Function> constructor;
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void ApplyViewTheme(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void AreaLabelVisibilityOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void AreaLabelVisibilityOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ColorAreasByArrayOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ColorAreasByArrayOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ColorGraphEdgesByArrayOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ColorGraphEdgesByArrayOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetAreaColorArrayName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetAreaHoverArrayName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetAreaLabelArrayName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetAreaLabelMapper(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetAreaLabelPriorityArrayName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetAreaLabelTextProperty(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetAreaLayoutStrategy(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetAreaSizeArrayName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetAreaToPolyData(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetGraphBundlingStrength(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetGraphEdgeColorArrayName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetGraphEdgeLabelArrayName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetGraphEdgeLabelTextProperty(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetGraphHoverArrayName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetGraphSplineType(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetShrinkPercentage(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GraphEdgeLabelVisibilityOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GraphEdgeLabelVisibilityOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetAreaColorArrayName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetAreaHoverArrayName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetAreaLabelArrayName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetAreaLabelMapper(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetAreaLabelPriorityArrayName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetAreaLabelTextProperty(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetAreaLayoutStrategy(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetAreaSizeArrayName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetAreaToPolyData(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetGraphBundlingStrength(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetGraphEdgeColorArrayName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetGraphEdgeColorToSplineFraction(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetGraphEdgeLabelArrayName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetGraphEdgeLabelTextProperty(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetGraphHoverArrayName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetGraphSplineType(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetLabelRenderMode(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetShrinkPercentage(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void UseRectangularCoordinatesOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void UseRectangularCoordinatesOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
