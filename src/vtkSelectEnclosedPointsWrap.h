/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKSELECTENCLOSEDPOINTSWRAP_H
#define NATIVE_EXTENSION_VTK_VTKSELECTENCLOSEDPOINTSWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkSelectEnclosedPoints.h>

#include "vtkDataSetAlgorithmWrap.h"

class VtkSelectEnclosedPointsWrap : public VtkDataSetAlgorithmWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitTpl(v8::Local<v8::FunctionTemplate> tpl);

		VtkSelectEnclosedPointsWrap(vtkSmartPointer<vtkSelectEnclosedPoints>);
		VtkSelectEnclosedPointsWrap();
		~VtkSelectEnclosedPointsWrap( );
		static Nan::Persistent<v8::Function> constructor;
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void CheckSurfaceOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void CheckSurfaceOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void Complete(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetCheckSurface(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetInsideOut(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetSurface(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetTolerance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetToleranceMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetToleranceMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void Initialize(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void InsideOutOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void InsideOutOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsInsideSurface(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCheckSurface(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetInsideOut(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetSurfaceConnection(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetSurfaceData(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetTolerance(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
