/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKIDFILTERWRAP_H
#define NATIVE_EXTENSION_VTK_VTKIDFILTERWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkIdFilter.h>

#include "vtkDataSetAlgorithmWrap.h"

class VtkIdFilterWrap : public VtkDataSetAlgorithmWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkIdFilterWrap(vtkSmartPointer<vtkIdFilter>);
		VtkIdFilterWrap();
		~VtkIdFilterWrap( );
		static Nan::Persistent<v8::Function> constructor;
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void CellIdsOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void CellIdsOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void FieldDataOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void FieldDataOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetCellIds(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetFieldData(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetIdsArrayName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetPointIds(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void PointIdsOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void PointIdsOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCellIds(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetFieldData(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetIdsArrayName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetPointIds(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
