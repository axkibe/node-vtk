/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKPOINTWIDGETWRAP_H
#define NATIVE_EXTENSION_VTK_VTKPOINTWIDGETWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkPointWidget.h>

#include "vtk3DWidgetWrap.h"

class VtkPointWidgetWrap : public Vtk3DWidgetWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitTpl(v8::Local<v8::FunctionTemplate> tpl);

		VtkPointWidgetWrap(vtkSmartPointer<vtkPointWidget>);
		VtkPointWidgetWrap();
		~VtkPointWidgetWrap( );
		static Nan::Persistent<v8::Function> constructor;
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void AllOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void AllOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetHotSpotSize(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetHotSpotSizeMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetHotSpotSizeMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetOutline(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetPolyData(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetProperty(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetSelectedProperty(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetTranslationMode(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetXShadows(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetYShadows(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetZShadows(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void OutlineOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void OutlineOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void PlaceWidget(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetEnabled(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetHotSpotSize(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetOutline(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetPosition(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetTranslationMode(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetXShadows(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetYShadows(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetZShadows(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void TranslationModeOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void TranslationModeOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void XShadowsOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void XShadowsOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void YShadowsOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void YShadowsOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ZShadowsOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ZShadowsOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
