/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKDATASETSURFACEFILTERWRAP_H
#define NATIVE_EXTENSION_VTK_VTKDATASETSURFACEFILTERWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkDataSetSurfaceFilter.h>

#include "vtkPolyDataAlgorithmWrap.h"

class VtkDataSetSurfaceFilterWrap : public VtkPolyDataAlgorithmWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkDataSetSurfaceFilterWrap(vtkSmartPointer<vtkDataSetSurfaceFilter>);
		VtkDataSetSurfaceFilterWrap();
		~VtkDataSetSurfaceFilterWrap( );
		static Nan::Persistent<v8::Function> constructor;
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void DataSetExecute(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNonlinearSubdivisionLevel(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetOriginalCellIdsName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetOriginalPointIdsName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetPassThroughCellIds(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetPassThroughPointIds(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetPieceInvariant(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetUseStrips(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void PassThroughCellIdsOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void PassThroughCellIdsOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void PassThroughPointIdsOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void PassThroughPointIdsOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetNonlinearSubdivisionLevel(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetOriginalCellIdsName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetOriginalPointIdsName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetPassThroughCellIds(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetPassThroughPointIds(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetPieceInvariant(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetUseStrips(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void UnstructuredGridExecute(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void UseStripsOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void UseStripsOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
