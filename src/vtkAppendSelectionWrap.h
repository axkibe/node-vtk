/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKAPPENDSELECTIONWRAP_H
#define NATIVE_EXTENSION_VTK_VTKAPPENDSELECTIONWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkAppendSelection.h>

#include "vtkSelectionAlgorithmWrap.h"

class VtkAppendSelectionWrap : public VtkSelectionAlgorithmWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitTpl(v8::Local<v8::FunctionTemplate> tpl);

		VtkAppendSelectionWrap(vtkSmartPointer<vtkAppendSelection>);
		VtkAppendSelectionWrap();
		~VtkAppendSelectionWrap( );
		static Nan::Persistent<v8::Function> constructor;
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void AddInputData(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void AppendByUnionOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void AppendByUnionOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetAppendByUnion(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetInput(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetUserManagedInputs(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void RemoveInputData(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetAppendByUnion(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetInputConnectionByNumber(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetNumberOfInputs(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetUserManagedInputs(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void UserManagedInputsOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void UserManagedInputsOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
