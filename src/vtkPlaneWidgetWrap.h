/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKPLANEWIDGETWRAP_H
#define NATIVE_EXTENSION_VTK_VTKPLANEWIDGETWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkPlaneWidget.h>

#include "vtkPolyDataSourceWidgetWrap.h"

class VtkPlaneWidgetWrap : public VtkPolyDataSourceWidgetWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkPlaneWidgetWrap(vtkSmartPointer<vtkPlaneWidget>);
		VtkPlaneWidgetWrap();
		~VtkPlaneWidgetWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetHandleProperty(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNormalToXAxis(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNormalToYAxis(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNormalToZAxis(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetPlane(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetPlaneProperty(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetPolyData(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetPolyDataAlgorithm(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetRepresentation(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetRepresentationMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetRepresentationMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetResolution(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetSelectedHandleProperty(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetSelectedPlaneProperty(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NormalToXAxisOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NormalToXAxisOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NormalToYAxisOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NormalToYAxisOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NormalToZAxisOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NormalToZAxisOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void PlaceWidget(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCenter(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetEnabled(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetNormal(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetNormalToXAxis(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetNormalToYAxis(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetNormalToZAxis(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetOrigin(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetPlaneProperty(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetPoint1(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetPoint2(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetRepresentation(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetRepresentationToOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetRepresentationToOutline(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetRepresentationToSurface(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetRepresentationToWireframe(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetResolution(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void UpdatePlacement(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
