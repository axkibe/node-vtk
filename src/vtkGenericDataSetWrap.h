/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKGENERICDATASETWRAP_H
#define NATIVE_EXTENSION_VTK_VTKGENERICDATASETWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkGenericDataSet.h>

#include "vtkDataObjectWrap.h"

class VtkGenericDataSetWrap : public VtkDataObjectWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitTpl(v8::Local<v8::FunctionTemplate> tpl);

		VtkGenericDataSetWrap(vtkSmartPointer<vtkGenericDataSet>);
		VtkGenericDataSetWrap();
		~VtkGenericDataSetWrap( );
		static Nan::Persistent<v8::Function> constructor;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void ComputeBounds(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetAttributes(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetCellDimension(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetCellTypes(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetData(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetDataObjectType(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetLength(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetTessellator(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewBoundaryIterator(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewCellIterator(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewPointIterator(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetTessellator(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
