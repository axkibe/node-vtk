/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKIMAGEQUANTIZERGBTOINDEXWRAP_H
#define NATIVE_EXTENSION_VTK_VTKIMAGEQUANTIZERGBTOINDEXWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkImageQuantizeRGBToIndex.h>

#include "vtkImageAlgorithmWrap.h"

class VtkImageQuantizeRGBToIndexWrap : public VtkImageAlgorithmWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkImageQuantizeRGBToIndexWrap(vtkSmartPointer<vtkImageQuantizeRGBToIndex>);
		VtkImageQuantizeRGBToIndexWrap();
		~VtkImageQuantizeRGBToIndexWrap( );
		static Nan::Persistent<v8::Function> constructor;
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void GetBuildTreeExecuteTime(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetInitializeExecuteTime(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetInputType(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetLookupIndexExecuteTime(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetLookupTable(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNumberOfColors(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNumberOfColorsMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNumberOfColorsMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetBuildTreeExecuteTime(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetInitializeExecuteTime(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetLookupIndexExecuteTime(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetNumberOfColors(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
