/* this file has been autogenerated by vtkNodeJsWrapInit */
/* editing this might proof futile */

#include <nan.h>

#include "vtkAlgorithmWrap.h"
#include "vtkAlgorithmOutputWrap.h"
#include "vtkAnnotationLayersAlgorithmWrap.h"
#include "vtkArrayDataAlgorithmWrap.h"
#include "vtkCachedStreamingDemandDrivenPipelineWrap.h"
#include "vtkCastToConcreteWrap.h"
#include "vtkCompositeDataPipelineWrap.h"
#include "vtkCompositeDataSetAlgorithmWrap.h"
#include "vtkDataObjectAlgorithmWrap.h"
#include "vtkDataSetAlgorithmWrap.h"
#include "vtkDemandDrivenPipelineWrap.h"
#include "vtkDirectedGraphAlgorithmWrap.h"
#include "vtkExecutiveWrap.h"
#include "vtkExtentSplitterWrap.h"
#include "vtkGraphAlgorithmWrap.h"
#include "vtkHierarchicalBoxDataSetAlgorithmWrap.h"
#include "vtkHyperOctreeAlgorithmWrap.h"
#include "vtkHyperTreeGridAlgorithmWrap.h"
#include "vtkImageAlgorithmWrap.h"
#include "vtkImageInPlaceFilterWrap.h"
#include "vtkImageToStructuredGridWrap.h"
#include "vtkImageToStructuredPointsWrap.h"
#include "vtkInformationExecutivePortKeyWrap.h"
#include "vtkInformationExecutivePortVectorKeyWrap.h"
#include "vtkMultiBlockDataSetAlgorithmWrap.h"
#include "vtkMultiTimeStepAlgorithmWrap.h"
#include "vtkOnePieceExtentTranslatorWrap.h"
#include "vtkPassInputTypeAlgorithmWrap.h"
#include "vtkPiecewiseFunctionAlgorithmWrap.h"
#include "vtkPiecewiseFunctionShiftScaleWrap.h"
#include "vtkPointSetAlgorithmWrap.h"
#include "vtkPolyDataAlgorithmWrap.h"
#include "vtkRectilinearGridAlgorithmWrap.h"
#include "vtkScalarTreeWrap.h"
#include "vtkSimpleImageToImageFilterWrap.h"
#include "vtkSimpleScalarTreeWrap.h"
#include "vtkStreamingDemandDrivenPipelineWrap.h"
#include "vtkStructuredGridAlgorithmWrap.h"
#include "vtkTableAlgorithmWrap.h"
#include "vtkTableExtentTranslatorWrap.h"
#include "vtkThreadedCompositeDataPipelineWrap.h"
#include "vtkThreadedImageAlgorithmWrap.h"
#include "vtkTreeAlgorithmWrap.h"
#include "vtkTrivialProducerWrap.h"
#include "vtkUndirectedGraphAlgorithmWrap.h"
#include "vtkUnstructuredGridAlgorithmWrap.h"
#include "vtkProgressObserverWrap.h"
#include "vtkSelectionAlgorithmWrap.h"
#include "vtkExtentRCBPartitionerWrap.h"
#include "vtkUniformGridPartitionerWrap.h"
#include "vtkUniformGridAMRAlgorithmWrap.h"
#include "vtkOverlappingAMRAlgorithmWrap.h"
#include "vtkNonOverlappingAMRAlgorithmWrap.h"

using namespace v8;

extern void vtkCommonExecutionModelNodeJsInit( v8::Local<v8::Object> exports )
{
	VtkAlgorithmWrap::Init( exports );
	VtkAlgorithmOutputWrap::Init( exports );
	VtkAnnotationLayersAlgorithmWrap::Init( exports );
	VtkArrayDataAlgorithmWrap::Init( exports );
	VtkCachedStreamingDemandDrivenPipelineWrap::Init( exports );
	VtkCastToConcreteWrap::Init( exports );
	VtkCompositeDataPipelineWrap::Init( exports );
	VtkCompositeDataSetAlgorithmWrap::Init( exports );
	VtkDataObjectAlgorithmWrap::Init( exports );
	VtkDataSetAlgorithmWrap::Init( exports );
	VtkDemandDrivenPipelineWrap::Init( exports );
	VtkDirectedGraphAlgorithmWrap::Init( exports );
	VtkExecutiveWrap::Init( exports );
	VtkExtentSplitterWrap::Init( exports );
	VtkGraphAlgorithmWrap::Init( exports );
	VtkHierarchicalBoxDataSetAlgorithmWrap::Init( exports );
	VtkHyperOctreeAlgorithmWrap::Init( exports );
	VtkHyperTreeGridAlgorithmWrap::Init( exports );
	VtkImageAlgorithmWrap::Init( exports );
	VtkImageInPlaceFilterWrap::Init( exports );
	VtkImageToStructuredGridWrap::Init( exports );
	VtkImageToStructuredPointsWrap::Init( exports );
	VtkInformationExecutivePortKeyWrap::Init( exports );
	VtkInformationExecutivePortVectorKeyWrap::Init( exports );
	VtkMultiBlockDataSetAlgorithmWrap::Init( exports );
	VtkMultiTimeStepAlgorithmWrap::Init( exports );
	VtkOnePieceExtentTranslatorWrap::Init( exports );
	VtkPassInputTypeAlgorithmWrap::Init( exports );
	VtkPiecewiseFunctionAlgorithmWrap::Init( exports );
	VtkPiecewiseFunctionShiftScaleWrap::Init( exports );
	VtkPointSetAlgorithmWrap::Init( exports );
	VtkPolyDataAlgorithmWrap::Init( exports );
	VtkRectilinearGridAlgorithmWrap::Init( exports );
	VtkScalarTreeWrap::Init( exports );
	VtkSimpleImageToImageFilterWrap::Init( exports );
	VtkSimpleScalarTreeWrap::Init( exports );
	VtkStreamingDemandDrivenPipelineWrap::Init( exports );
	VtkStructuredGridAlgorithmWrap::Init( exports );
	VtkTableAlgorithmWrap::Init( exports );
	VtkTableExtentTranslatorWrap::Init( exports );
	VtkThreadedCompositeDataPipelineWrap::Init( exports );
	VtkThreadedImageAlgorithmWrap::Init( exports );
	VtkTreeAlgorithmWrap::Init( exports );
	VtkTrivialProducerWrap::Init( exports );
	VtkUndirectedGraphAlgorithmWrap::Init( exports );
	VtkUnstructuredGridAlgorithmWrap::Init( exports );
	VtkProgressObserverWrap::Init( exports );
	VtkSelectionAlgorithmWrap::Init( exports );
	VtkExtentRCBPartitionerWrap::Init( exports );
	VtkUniformGridPartitionerWrap::Init( exports );
	VtkUniformGridAMRAlgorithmWrap::Init( exports );
	VtkOverlappingAMRAlgorithmWrap::Init( exports );
	VtkNonOverlappingAMRAlgorithmWrap::Init( exports );
}

