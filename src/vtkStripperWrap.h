/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKSTRIPPERWRAP_H
#define NATIVE_EXTENSION_VTK_VTKSTRIPPERWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkStripper.h>

#include "vtkPolyDataAlgorithmWrap.h"

class VtkStripperWrap : public VtkPolyDataAlgorithmWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitTpl(v8::Local<v8::FunctionTemplate> tpl);

		VtkStripperWrap(vtkSmartPointer<vtkStripper>);
		VtkStripperWrap();
		~VtkStripperWrap( );
		static Nan::Persistent<v8::Function> constructor;
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetMaximumLength(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetMaximumLengthMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetMaximumLengthMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetPassCellDataAsFieldData(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetPassThroughCellIds(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetPassThroughPointIds(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void PassCellDataAsFieldDataOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void PassCellDataAsFieldDataOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void PassThroughCellIdsOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void PassThroughCellIdsOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void PassThroughPointIdsOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void PassThroughPointIdsOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetMaximumLength(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetPassCellDataAsFieldData(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetPassThroughCellIds(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetPassThroughPointIds(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
