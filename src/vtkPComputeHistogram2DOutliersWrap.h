/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKPCOMPUTEHISTOGRAM2DOUTLIERSWRAP_H
#define NATIVE_EXTENSION_VTK_VTKPCOMPUTEHISTOGRAM2DOUTLIERSWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkPComputeHistogram2DOutliers.h>

#include "vtkComputeHistogram2DOutliersWrap.h"

class VtkPComputeHistogram2DOutliersWrap : public VtkComputeHistogram2DOutliersWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitTpl(v8::Local<v8::FunctionTemplate> tpl);

		VtkPComputeHistogram2DOutliersWrap(vtkSmartPointer<vtkPComputeHistogram2DOutliers>);
		VtkPComputeHistogram2DOutliersWrap();
		~VtkPComputeHistogram2DOutliersWrap( );
		static Nan::Persistent<v8::Function> constructor;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetController(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetController(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
