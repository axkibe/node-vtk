/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKWINDOWEDSINCPOLYDATAFILTERWRAP_H
#define NATIVE_EXTENSION_VTK_VTKWINDOWEDSINCPOLYDATAFILTERWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkWindowedSincPolyDataFilter.h>

#include "vtkPolyDataAlgorithmWrap.h"

class VtkWindowedSincPolyDataFilterWrap : public VtkPolyDataAlgorithmWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkWindowedSincPolyDataFilterWrap(vtkSmartPointer<vtkWindowedSincPolyDataFilter>);
		VtkWindowedSincPolyDataFilterWrap();
		~VtkWindowedSincPolyDataFilterWrap( );
		static Nan::Persistent<v8::Function> constructor;
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void BoundarySmoothingOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void BoundarySmoothingOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void FeatureEdgeSmoothingOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void FeatureEdgeSmoothingOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GenerateErrorScalarsOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GenerateErrorScalarsOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GenerateErrorVectorsOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GenerateErrorVectorsOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetBoundarySmoothing(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetEdgeAngle(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetEdgeAngleMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetEdgeAngleMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetFeatureAngle(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetFeatureAngleMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetFeatureAngleMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetFeatureEdgeSmoothing(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetGenerateErrorScalars(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetGenerateErrorVectors(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNonManifoldSmoothing(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNormalizeCoordinates(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNumberOfIterations(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNumberOfIterationsMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNumberOfIterationsMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetPassBand(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetPassBandMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetPassBandMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NonManifoldSmoothingOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NonManifoldSmoothingOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NormalizeCoordinatesOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NormalizeCoordinatesOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetBoundarySmoothing(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetEdgeAngle(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetFeatureAngle(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetFeatureEdgeSmoothing(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetGenerateErrorScalars(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetGenerateErrorVectors(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetNonManifoldSmoothing(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetNormalizeCoordinates(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetNumberOfIterations(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetPassBand(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
