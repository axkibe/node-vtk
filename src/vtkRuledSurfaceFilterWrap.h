/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKRULEDSURFACEFILTERWRAP_H
#define NATIVE_EXTENSION_VTK_VTKRULEDSURFACEFILTERWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkRuledSurfaceFilter.h>

#include "vtkPolyDataAlgorithmWrap.h"

class VtkRuledSurfaceFilterWrap : public VtkPolyDataAlgorithmWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkRuledSurfaceFilterWrap(vtkSmartPointer<vtkRuledSurfaceFilter>);
		VtkRuledSurfaceFilterWrap();
		~VtkRuledSurfaceFilterWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void CloseSurfaceOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void CloseSurfaceOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetCloseSurface(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetDistanceFactor(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetDistanceFactorMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetDistanceFactorMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetOffset(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetOffsetMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetOffsetMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetOnRatio(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetOnRatioMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetOnRatioMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetOrientLoops(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetPassLines(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetRuledMode(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetRuledModeAsString(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetRuledModeMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetRuledModeMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void OrientLoopsOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void OrientLoopsOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void PassLinesOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void PassLinesOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCloseSurface(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetDistanceFactor(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetOffset(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetOnRatio(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetOrientLoops(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetPassLines(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetResolution(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetRuledMode(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetRuledModeToPointWalk(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetRuledModeToResample(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
