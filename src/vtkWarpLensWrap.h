/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKWARPLENSWRAP_H
#define NATIVE_EXTENSION_VTK_VTKWARPLENSWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkWarpLens.h>

#include "vtkPointSetAlgorithmWrap.h"

class VtkWarpLensWrap : public VtkPointSetAlgorithmWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitTpl(v8::Local<v8::FunctionTemplate> tpl);

		VtkWarpLensWrap(vtkSmartPointer<vtkWarpLens>);
		VtkWarpLensWrap();
		~VtkWarpLensWrap( );
		static Nan::Persistent<v8::Function> constructor;
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void FillInputPortInformation(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetFormatHeight(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetFormatWidth(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetImageHeight(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetImageWidth(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetK1(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetK2(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetKappa(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetP1(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetP2(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCenter(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetFormatHeight(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetFormatWidth(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetImageHeight(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetImageWidth(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetK1(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetK2(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetKappa(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetP1(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetP2(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetPrincipalPoint(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
