/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKFASTSPLATTERWRAP_H
#define NATIVE_EXTENSION_VTK_VTKFASTSPLATTERWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkFastSplatter.h>

#include "vtkImageAlgorithmWrap.h"

class VtkFastSplatterWrap : public VtkImageAlgorithmWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitTpl(v8::Local<v8::FunctionTemplate> tpl);

		VtkFastSplatterWrap(vtkSmartPointer<vtkFastSplatter>);
		VtkFastSplatterWrap();
		~VtkFastSplatterWrap( );
		static Nan::Persistent<v8::Function> constructor;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetLimitMode(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetNumberOfPointsSplatted(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetLimitMode(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetLimitModeToClamp(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetLimitModeToFreezeScale(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetLimitModeToNone(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetLimitModeToScale(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetModelBounds(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetOutputDimensions(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetSplatConnection(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
