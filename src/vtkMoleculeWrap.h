/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKMOLECULEWRAP_H
#define NATIVE_EXTENSION_VTK_VTKMOLECULEWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkMolecule.h>

#include "vtkUndirectedGraphWrap.h"

class VtkMoleculeWrap : public VtkUndirectedGraphWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitTpl(v8::Local<v8::FunctionTemplate> tpl);

		VtkMoleculeWrap(vtkSmartPointer<vtkMolecule>);
		VtkMoleculeWrap();
		~VtkMoleculeWrap( );
		static Nan::Persistent<v8::Function> constructor;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void DeepCopy(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void DeepCopyAttributes(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void DeepCopyStructure(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetAtomicNumberArray(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetAtomicPositionArray(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetDataObjectType(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetElectronicData(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void Initialize(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetElectronicData(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ShallowCopy(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ShallowCopyAttributes(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ShallowCopyStructure(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
