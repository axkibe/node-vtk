/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKDIJKSTRAIMAGEGEODESICPATHWRAP_H
#define NATIVE_EXTENSION_VTK_VTKDIJKSTRAIMAGEGEODESICPATHWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkDijkstraImageGeodesicPath.h>

#include "vtkDijkstraGraphGeodesicPathWrap.h"

class VtkDijkstraImageGeodesicPathWrap : public VtkDijkstraGraphGeodesicPathWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitTpl(v8::Local<v8::FunctionTemplate> tpl);

		VtkDijkstraImageGeodesicPathWrap(vtkSmartPointer<vtkDijkstraImageGeodesicPath>);
		VtkDijkstraImageGeodesicPathWrap();
		~VtkDijkstraImageGeodesicPathWrap( );
		static Nan::Persistent<v8::Function> constructor;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetCurvatureWeight(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetCurvatureWeightMaxValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetCurvatureWeightMinValue(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetEdgeLengthWeight(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetImageWeight(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetInputAsImageData(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetCurvatureWeight(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetEdgeLengthWeight(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetImageWeight(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetInputData(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
