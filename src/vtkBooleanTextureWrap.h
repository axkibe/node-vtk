/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKBOOLEANTEXTUREWRAP_H
#define NATIVE_EXTENSION_VTK_VTKBOOLEANTEXTUREWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkBooleanTexture.h>

#include "vtkImageAlgorithmWrap.h"

class VtkBooleanTextureWrap : public VtkImageAlgorithmWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitTpl(v8::Local<v8::FunctionTemplate> tpl);

		VtkBooleanTextureWrap(vtkSmartPointer<vtkBooleanTexture>);
		VtkBooleanTextureWrap();
		~VtkBooleanTextureWrap( );
		static Nan::Persistent<v8::Function> constructor;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetThickness(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetXSize(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetYSize(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetThickness(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetXSize(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetYSize(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
