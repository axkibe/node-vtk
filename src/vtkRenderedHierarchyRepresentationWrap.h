/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKRENDEREDHIERARCHYREPRESENTATIONWRAP_H
#define NATIVE_EXTENSION_VTK_VTKRENDEREDHIERARCHYREPRESENTATIONWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkRenderedHierarchyRepresentation.h>

#include "vtkRenderedGraphRepresentationWrap.h"

class VtkRenderedHierarchyRepresentationWrap : public VtkRenderedGraphRepresentationWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitTpl(v8::Local<v8::FunctionTemplate> tpl);

		VtkRenderedHierarchyRepresentationWrap(vtkSmartPointer<vtkRenderedHierarchyRepresentation>);
		VtkRenderedHierarchyRepresentationWrap();
		~VtkRenderedHierarchyRepresentationWrap( );
		static Nan::Persistent<v8::Function> constructor;
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void ColorGraphEdgesByArrayOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void ColorGraphEdgesByArrayOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetBundlingStrength(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetGraphEdgeColorArrayName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetGraphEdgeLabelArrayName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetGraphEdgeLabelFontSize(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetGraphSplineType(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GraphEdgeLabelVisibilityOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GraphEdgeLabelVisibilityOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GraphVisibilityOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GraphVisibilityOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetBundlingStrength(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetGraphEdgeColorArrayName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetGraphEdgeColorToSplineFraction(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetGraphEdgeLabelArrayName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetGraphEdgeLabelFontSize(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetGraphSplineType(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
