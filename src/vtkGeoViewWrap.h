/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKGEOVIEWWRAP_H
#define NATIVE_EXTENSION_VTK_VTKGEOVIEWWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkGeoView.h>

#include "vtkRenderViewWrap.h"

class VtkGeoViewWrap : public VtkRenderViewWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitTpl(v8::Local<v8::FunctionTemplate> tpl);

		VtkGeoViewWrap(vtkSmartPointer<vtkGeoView>);
		VtkGeoViewWrap();
		~VtkGeoViewWrap( );
		static Nan::Persistent<v8::Function> constructor;
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void AddDefaultImageRepresentation(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetGeoInteractorStyle(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetTerrain(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void LockHeadingOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void LockHeadingOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void PrepareForRendering(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void Render(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetGeoInteractorStyle(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetTerrain(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
