/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKMERGEDATAOBJECTFILTERWRAP_H
#define NATIVE_EXTENSION_VTK_VTKMERGEDATAOBJECTFILTERWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkMergeDataObjectFilter.h>

#include "vtkDataSetAlgorithmWrap.h"

class VtkMergeDataObjectFilterWrap : public VtkDataSetAlgorithmWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkMergeDataObjectFilterWrap(vtkSmartPointer<vtkMergeDataObjectFilter>);
		VtkMergeDataObjectFilterWrap();
		~VtkMergeDataObjectFilterWrap( );
		static Nan::Persistent<v8::Function> constructor;
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetDataObject(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetOutputField(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetDataObjectInputData(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetOutputField(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetOutputFieldToCellDataField(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetOutputFieldToDataObjectField(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetOutputFieldToPointDataField(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
