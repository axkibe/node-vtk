/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKPOINTSPROJECTEDHULLWRAP_H
#define NATIVE_EXTENSION_VTK_VTKPOINTSPROJECTEDHULLWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkPointsProjectedHull.h>

#include "vtkPointsWrap.h"

class VtkPointsProjectedHullWrap : public VtkPointsWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitTpl(v8::Local<v8::FunctionTemplate> tpl);

		VtkPointsProjectedHullWrap(vtkSmartPointer<vtkPointsProjectedHull>);
		VtkPointsProjectedHullWrap();
		~VtkPointsProjectedHullWrap( );
		static Nan::Persistent<v8::Function> constructor;
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void GetSizeCCWHullX(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetSizeCCWHullY(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetSizeCCWHullZ(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void Initialize(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void RectangleIntersectionX(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void RectangleIntersectionY(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void RectangleIntersectionZ(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void Reset(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void Update(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
