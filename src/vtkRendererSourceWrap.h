/* this file has been autogenerated by vtkNodeJsWrap */
/* editing this might proof futile */

#ifndef NATIVE_EXTENSION_VTK_VTKRENDERERSOURCEWRAP_H
#define NATIVE_EXTENSION_VTK_VTKRENDERERSOURCEWRAP_H

#include <nan.h>

#include <vtkSmartPointer.h>
#include <vtkRendererSource.h>

#include "vtkAlgorithmWrap.h"

class VtkRendererSourceWrap : public VtkAlgorithmWrap
{
	public:
		using Nan::ObjectWrap::Wrap;
		static void Init(v8::Local<v8::Object> exports);
		static void InitPtpl();
		static void ConstructorGetter(
			v8::Local<v8::String> property,
			const Nan::PropertyCallbackInfo<v8::Value>& info);

		VtkRendererSourceWrap(vtkSmartPointer<vtkRendererSource>);
		VtkRendererSourceWrap();
		~VtkRendererSourceWrap( );
		static Nan::Persistent<v8::FunctionTemplate> ptpl;

	private:
		static void New(const Nan::FunctionCallbackInfo<v8::Value>& info);

		static void DepthValuesInScalarsOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void DepthValuesInScalarsOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void DepthValuesOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void DepthValuesOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetClassName(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetDepthValues(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetDepthValuesInScalars(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetInput(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetOutput(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetRenderFlag(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void GetWholeWindow(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void IsA(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void NewInstance(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void RenderFlagOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void RenderFlagOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SafeDownCast(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetDepthValues(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetDepthValuesInScalars(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetInput(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetRenderFlag(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void SetWholeWindow(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void WholeWindowOff(const Nan::FunctionCallbackInfo<v8::Value>& info);
		static void WholeWindowOn(const Nan::FunctionCallbackInfo<v8::Value>& info);
};

#endif
